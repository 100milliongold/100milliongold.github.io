<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vscode 특정폴더 숨기기</title>
      <link href="/2019/07/26/vscode-%ED%8A%B9%EC%A0%95%ED%8F%B4%EB%8D%94-%EC%88%A8%EA%B8%B0%EA%B8%B0/"/>
      <url>/2019/07/26/vscode-%ED%8A%B9%EC%A0%95%ED%8F%B4%EB%8D%94-%EC%88%A8%EA%B8%B0%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="설정"><a href="#설정" class="headerlink" title="설정"></a>설정</h2><ol><li>vscode 설정창으로 이동 <img src="/2019/07/26/vscode-특정폴더-숨기기/img1.png" title="spaced title"></li><li>사용자 설정에서 검색창에 exclude 을 입력후에 Files.Execlude 항목에서 숨길 폴더 추가 <img src="/2019/07/26/vscode-특정폴더-숨기기/img2.png" title="spaced title"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab docker root password reset</title>
      <link href="/2019/07/25/gitlab-docker-root-password-reset/"/>
      <url>/2019/07/25/gitlab-docker-root-password-reset/</url>
      
        <content type="html"><![CDATA[<p>gitlab 이용간 관리자 비번을 까벅었다! 초기화 하자</p><h2 id="초기화"><a href="#초기화" class="headerlink" title="초기화"></a>초기화</h2><ol><li><p>docker console 접속</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="hljs-built_in">exec</span> -it gitlab /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>Ruby on Rails console 접속</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitlab-rails console production</span><br></pre></td></tr></table></figure></li><li><p>root 유저 설정으로 접속</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irb(main):006:0&gt; user = User.where(id: 1).first</span><br></pre></td></tr></table></figure><ul><li>or<figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irb(main):006:0&gt; user = User.find_by(email: <span class="hljs-string">'admin@example.com'</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>패스워드 초기화</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">irb(main):006:0&gt; user.password = <span class="hljs-string">'secret_pass'</span></span><br><span class="line">irb(main):006:0&gt; user.password_confirmation = <span class="hljs-string">'secret_pass'</span></span><br></pre></td></tr></table></figure></li><li><p>저장</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irb(main):006:0&gt; user.save!</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mecab-ko-dic 품사 태그 설명</title>
      <link href="/2019/07/25/mecab-ko-dic-%ED%92%88%EC%82%AC-%ED%83%9C%EA%B7%B8-%EC%84%A4%EB%AA%85/"/>
      <url>/2019/07/25/mecab-ko-dic-%ED%92%88%EC%82%AC-%ED%83%9C%EA%B7%B8-%EC%84%A4%EB%AA%85/</url>
      
        <content type="html"><![CDATA[<h2 id="세종-품사-태그"><a href="#세종-품사-태그" class="headerlink" title="세종 품사 태그"></a>세종 품사 태그</h2><table><thead><tr><th>태그</th><th>설명 </th></tr></thead><tbody><tr><td>NNG</td><td></td><td>일반 명사</td></tr><tr><td>NNP</td><td>고유 명사</td></tr><tr><td>NNB</td><td>의존 명사</td></tr><tr><td>NR</td><td>수사</td></tr><tr><td>NP</td><td>대명사</td></tr><tr><td>VV</td><td>동사</td></tr><tr><td>VA</td><td>형용사</td></tr><tr><td>VX</td><td>보조 용언</td></tr><tr><td>VCP</td><td>긍정 지정사</td></tr><tr><td>VCN</td><td>부정 지정사</td></tr><tr><td>MM</td><td>관형사</td></tr><tr><td>MAG</td><td>일반 부사</td></tr><tr><td>MAJ</td><td>접속 부사</td></tr><tr><td>IC</td><td>감탄사</td></tr><tr><td>JKS</td><td>주격 조사</td></tr><tr><td>JKC</td><td>보격 조사</td></tr><tr><td>JKG</td><td>관형격 조사</td></tr><tr><td>JKO</td><td>목적격 조사</td></tr><tr><td>JKB</td><td>부사격 조사</td></tr><tr><td>JKV</td><td>호격 조사</td></tr><tr><td>JKQ</td><td>인용격 조사</td></tr><tr><td>JX</td><td>보조사</td></tr><tr><td>JC</td><td>접속 조사</td></tr><tr><td>EP</td><td>선어말 어미</td></tr><tr><td>EF</td><td>종결 어미</td></tr><tr><td>EC</td><td>연결 어미</td></tr><tr><td>ETN</td><td>명사형 전성 어미</td></tr><tr><td>ETM</td><td>관형형 전성 어미 </td></tr><tr><td>XPN</td><td>체언 접두사</td></tr><tr><td>XSN</td><td>명사 파생 접미사</td></tr><tr><td>XSV</td><td>동사 파생 접미사</td></tr><tr><td>XSA</td><td>형용사 파생 접미사</td></tr><tr><td>XR</td><td>어근</td></tr><tr><td>SF</td><td>마침표, 물음표, 느낌표</td></tr><tr><td>SE</td><td>줄임표</td></tr><tr><td>SS</td><td>따옴표,괄호표,줄표</td></tr><tr><td>SP</td><td>쉼표,가운뎃점,콜론,빗금</td></tr><tr><td>SO</td><td>붙임표(물결,숨김,빠짐)</td></tr><tr><td>SW</td><td>기타기호 (논리수학기호,화폐기호)</td></tr><tr><td>SL</td><td>외국어</td></tr><tr><td>SH</td><td>한자</td></tr><tr><td>SN</td><td>숫자</td></tr></tbody></table><h2 id="mecab-ko-dic-품사-태그"><a href="#mecab-ko-dic-품사-태그" class="headerlink" title="mecab-ko-dic 품사 태그"></a>mecab-ko-dic 품사 태그</h2><table><thead><tr><th>태그</th><th>설명 </th></tr></thead><tbody><tr><td>NNG</td><td>일반 명사</td></tr><tr><td>NNP</td><td>고유 명사</td></tr><tr><td>NNB</td><td>의존 명사</td></tr><tr><td>NNBC</td><td>단위를 나타내는 명사</td></tr><tr><td>NR</td><td>수사</td></tr><tr><td>NP</td><td>대명사</td></tr><tr><td>VV</td><td>동사</td></tr><tr><td>VA</td><td>형용사</td></tr><tr><td>VX</td><td>보조 용언</td></tr><tr><td>VCP</td><td>긍정 지정사</td></tr><tr><td>VCN</td><td>부정 지정사</td></tr><tr><td>MM</td><td>관형사</td></tr><tr><td>MAG</td><td>일반 부사</td></tr><tr><td>MAJ</td><td>접속 부사</td></tr><tr><td>IC</td><td>감탄사</td></tr><tr><td>JKS</td><td>주격 조사</td></tr><tr><td>JKC</td><td>보격 조사</td></tr><tr><td>JKG</td><td>관형격 조사</td></tr><tr><td>JKO</td><td>목적격 조사</td></tr><tr><td>JKB</td><td>부사격 조사</td></tr><tr><td>JKV</td><td>호격 조사</td></tr><tr><td>JKQ</td><td>인용격 조사</td></tr><tr><td>JX</td><td>보조사</td></tr><tr><td>JC</td><td>접속 조사</td></tr><tr><td>EP</td><td>선어말 어미</td></tr><tr><td>EF</td><td>종결 어미</td></tr><tr><td>EC</td><td>연결 어미</td></tr><tr><td>ETN</td><td>명사형 전성 어미</td></tr><tr><td>ETM</td><td>관형형 전성 어미 </td></tr><tr><td>XPN</td><td>체언 접두사</td></tr><tr><td>XSN</td><td>명사 파생 접미사</td></tr><tr><td>XSV</td><td>동사 파생 접미사</td></tr><tr><td>XSA</td><td>형용사 파생 접미사</td></tr><tr><td>XR</td><td>어근</td></tr><tr><td>SF</td><td>마침표, 물음표, 느낌표</td></tr><tr><td>SE</td><td>줄임표 …</td></tr><tr><td>SSO</td><td>여는 괄호 (, [</td></tr><tr><td>SSC</td><td>닫는 괄호 ), ]</td></tr><tr><td>SC</td><td>구분자 , · / :</td></tr><tr><td>SY</td><td></td></tr><tr><td>SL</td><td>외국어</td></tr><tr><td>SH</td><td>한자</td></tr><tr><td>SN</td><td>숫자</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java spark wordcount examples</title>
      <link href="/2019/07/22/java-spark-wordcount-examples/"/>
      <url>/2019/07/22/java-spark-wordcount-examples/</url>
      
        <content type="html"><![CDATA[<ul><li><p>pom.xml 설정</p>  <figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">       <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.spark<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">       <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spark-core_2.12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">   .</span><br><span class="line">   .</span><br><span class="line">   .</span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-jar-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">archive</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">addClasspath</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">addClasspath</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">classpathPrefix</span>&gt;</span>lib/<span class="hljs-tag">&lt;/<span class="hljs-name">classpathPrefix</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">mainClass</span>&gt;</span>com.geekcap.javaworld.sparkexample.WordCount<span class="hljs-tag">&lt;/<span class="hljs-name">mainClass</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">archive</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>copy<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>install<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>copy-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>java example</p>  <figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SparkConf sparkConf = <span class="hljs-keyword">new</span> SparkConf().setMaster(<span class="hljs-string">"local"</span>).setAppName(<span class="hljs-string">"JD Word Counter"</span>);</span><br><span class="line">JavaSparkContext sc = <span class="hljs-keyword">new</span> JavaSparkContext(sparkConf);</span><br><span class="line">JavaRDD&lt;String&gt; textFile = sc.textFile(<span class="hljs-string">"text.txt"</span>);</span><br><span class="line">JavaPairRDD&lt;String, Integer&gt; counts = textFile</span><br><span class="line">    .flatMap(s -&gt; Arrays.asList(s.split(<span class="hljs-string">" "</span>)).iterator())</span><br><span class="line">    .mapToPair(word -&gt; <span class="hljs-keyword">new</span> Tuple2&lt;&gt;(word, <span class="hljs-number">1</span>))</span><br><span class="line">    .reduceByKey((a, b) -&gt; a + b);</span><br><span class="line">counts.saveAsTextFile(<span class="hljs-string">"wordcouter"</span>);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> java </tag>
            
            <tag> spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react proxy server 설정</title>
      <link href="/2019/07/19/react-proxy-server-%EC%84%A4%EC%A0%95/"/>
      <url>/2019/07/19/react-proxy-server-%EC%84%A4%EC%A0%95/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>npm devserver 에서 proxy 설정을 할경우 package.json 파일에 <code>&quot;proxy&quot;: &quot;http://localhost:&lt;PORT-GOES-HERE&gt;”</code> 항목을 추가해서 설정을 했었다.<br><br><br></p><p>문제는 기본적인 주소만 설정이 되어 있어서 웹소켓 같은 세부설정이 안되는 문제가 있었다. <br><br></p><p>CRA (Create-react-app) v2 부터는 src/setupProxy.js 파일을 통하여 proxy server 을 커스터마이징 을 할수있게 되었다.<br><br><br></p><p>참고 <a href="https://velog.io/@velopert/create-react-app-v2#5.-proxy-%EC%84%A4%EC%A0%95%EC%9D%84-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95-%EA%B0%80%EB%8A%A5" target="_blank" rel="noopener">@velopert Create-react-app V2 릴리즈! 무슨 변경 사항이 있을까?</a></p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><ol><li><p>기존 프로젝트에 <a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noopener">http-proxy-middleware</a> 추가하기</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> npm install --save-dev http-proxy-middleware</span></span><br></pre></td></tr></table></figure></li><li><p>package.json 에 <code>&quot;proxy&quot;: &quot;http://localhost:&lt;PORT-GOES-HERE&gt;”</code> 항목 제거</p></li><li>src/setupProxy.js 파일 생성 및 수정<figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"> <span class="hljs-keyword">const</span> proxy = <span class="hljs-built_in">require</span>(<span class="hljs-string">'http-proxy-middleware'</span>);</span><br><span class="line"><span class="hljs-comment">// create-react-app proxy 설정</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 190524 je.kim dev server 에서 proxy 사용시 세션 유지 불가 -&gt; 강제로 세션키를 맞춤</span></span><br><span class="line"><span class="hljs-keyword">var</span> cookie;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// proxy 로 request 시 이벤트</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">relayRequestHeaders</span>(<span class="hljs-params">proxyReq, req</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-built_in">console</span>.debug(<span class="hljs-string">'💥💥💥 request 💥💥💥'</span>);</span><br><span class="line">    <span class="hljs-built_in">Object</span>.keys(req.headers).forEach(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">key</span>) </span>&#123;</span><br><span class="line">      <span class="hljs-built_in">console</span>.debug(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span> : <span class="hljs-subst">$&#123;req.headers[key]&#125;</span>`</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="hljs-keyword">if</span> (cookie) &#123;</span><br><span class="line">      proxyReq.setHeader(<span class="hljs-string">'cookie'</span>, cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// proxy 로 Response 시 이벤트</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">relayResponseHeaders</span>(<span class="hljs-params">proxyRes, req, res</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-built_in">console</span>.debug(<span class="hljs-string">'💥💥💥 response 💥💥💥'</span>);</span><br><span class="line">    <span class="hljs-built_in">Object</span>.keys(proxyRes.headers).forEach(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">key</span>) </span>&#123;</span><br><span class="line">      <span class="hljs-built_in">console</span>.debug(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span> : <span class="hljs-subst">$&#123;proxyRes.headers[key]&#125;</span>`</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="hljs-keyword">var</span> proxyCookie = proxyRes.headers[<span class="hljs-string">"set-cookie"</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> (proxyCookie) &#123;</span><br><span class="line">      cookie = proxyCookie;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">module</span>.exports = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">app</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-comment">// ...</span></span><br><span class="line">  <span class="hljs-comment">// 프록시 설정</span></span><br><span class="line">  app.use(</span><br><span class="line">    proxy(</span><br><span class="line">      [</span><br><span class="line">        <span class="hljs-string">'/'</span>,</span><br><span class="line">      ], &#123;</span><br><span class="line">        <span class="hljs-comment">// 대상서버</span></span><br><span class="line">         target: <span class="hljs-string">'http://localhost:8080'</span> ,</span><br><span class="line">         secure: <span class="hljs-literal">false</span>, <span class="hljs-comment">// disable SSL verification</span></span><br><span class="line">         <span class="hljs-comment">//changeOrigin: true, // for vhosted sites, changes host header to match to target's host</span></span><br><span class="line">         ws : <span class="hljs-literal">true</span>, <span class="hljs-comment">// websock on</span></span><br><span class="line">         onProxyReq: relayRequestHeaders,</span><br><span class="line">         onProxyRes: relayResponseHeaders,</span><br><span class="line">         <span class="hljs-comment">// ajax 혹은 통신이 있을경우에 로그에 표시</span></span><br><span class="line">         <span class="hljs-comment">// logLevel: 'debug'</span></span><br><span class="line">       &#125;</span><br><span class="line">    )</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> react.js </tag>
            
            <tag> front-end </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 외부 javascript 라이브러리 불려오기 (kakao map javascript)</title>
      <link href="/2019/07/18/react-%EC%99%B8%EB%B6%80-javascript-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%B6%88%EB%A0%A4%EC%98%A4%EA%B8%B0-kakao-map-javascript/"/>
      <url>/2019/07/18/react-%EC%99%B8%EB%B6%80-javascript-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%B6%88%EB%A0%A4%EC%98%A4%EA%B8%B0-kakao-map-javascript/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>react 을 이용하다 보면 대부분의 라이브러리들은 npm 을 이용하여 손쉽게 이용이 가능하다.<br><br>하지만 cdn 혹은 kakao map 과 같은 api 을 통한 javascript 라이브러리 은 인증문제도 있어서 가져오기 애매할수도 있다.<br><br></p><p>그렇다고 해서 방법이 없는것은 아니다. <a href="https://www.npmjs.com/package/scriptjs" target="_blank" rel="noopener">scriptjs</a> 을 통하여 외부 라이브러리를 통하여 가져올수는 있다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> npm i scriptjs</span></span><br></pre></td></tr></table></figure><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> $script <span class="hljs-keyword">from</span> <span class="hljs-string">'scriptjs'</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">const</span> kakao_url = <span class="hljs-string">`http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&amp;appkey=<span class="hljs-subst">$&#123;API_KEY&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">$script(kakao_url, () =&gt; &#123;</span><br><span class="line">    <span class="hljs-comment">/*global kakao*/</span></span><br><span class="line">    <span class="hljs-keyword">this</span>.kakao = kakao;</span><br><span class="line">    kakao.maps.load(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="line">        <span class="hljs-comment">// v3가 모두 로드된 후, 이 콜백 함수가 실행됩니다.</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>scriptjs 사용시 /<em> global {변수명} </em>/ 을 추가하여 컴파일시 에러가 나지 않도록 조치 한다.</li></ul><h2 id="react-js-와-연동-전체-스크립트"><a href="#react-js-와-연동-전체-스크립트" class="headerlink" title="react.js 와 연동 (전체 스크립트)"></a>react.js 와 연동 (전체 스크립트)</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> React, &#123; Component , createRef&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span></span><br><span class="line"><span class="hljs-keyword">import</span> $script <span class="hljs-keyword">from</span> <span class="hljs-string">'scriptjs'</span>;</span><br><span class="line"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> mapApi <span class="hljs-keyword">from</span> <span class="hljs-string">'../../services/maps'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">KakaoMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">constructor</span>(props)&#123;</span><br><span class="line">        <span class="hljs-keyword">super</span>(props);</span><br><span class="line">        <span class="hljs-keyword">this</span>.appRef = createRef();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    state = &#123;</span><br><span class="line">        API_KEY: <span class="hljs-literal">null</span>,</span><br><span class="line">        setLoading: <span class="hljs-literal">true</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="hljs-keyword">this</span>.getApiKey().then(<span class="hljs-function"><span class="hljs-params">API_KEY</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">this</span>.setState(&#123; API_KEY, <span class="hljs-attr">setLoading</span>: <span class="hljs-literal">false</span>, &#125;);</span><br><span class="line">            <span class="hljs-keyword">this</span>.setKakaoMap();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidUpdate()&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.customOverlay)&#123;</span><br><span class="line">            <span class="hljs-keyword">this</span>.customOverlay.setMap(<span class="hljs-literal">null</span>);</span><br><span class="line">            <span class="hljs-keyword">this</span>.customOverlay = <span class="hljs-literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">this</span>.setCenter();</span><br><span class="line">        <span class="hljs-keyword">this</span>.setOverLay();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 서버에 api 키 가져오기</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    getApiKey = <span class="hljs-keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> mapApi.getApiKey();</span><br><span class="line">        <span class="hljs-keyword">return</span> res.data;        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 지도 가운데</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    setCenter = <span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="hljs-keyword">var</span> LatLng = <span class="hljs-keyword">this</span>.props.LatLng;</span><br><span class="line">        <span class="hljs-keyword">let</span> &#123; x, y &#125; = LatLng;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">this</span>.kakao === <span class="hljs-string">'undefined'</span> || <span class="hljs-keyword">this</span>.kakao == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="hljs-comment">// 이동할 위도 경도 위치를 생성합니다 </span></span><br><span class="line">        <span class="hljs-keyword">var</span> moveLatLon = <span class="hljs-keyword">new</span> <span class="hljs-keyword">this</span>.kakao.maps.LatLng(y, x);</span><br><span class="line">        <span class="hljs-comment">// 지도 중심을 이동 시킵니다</span></span><br><span class="line">        <span class="hljs-keyword">this</span>.map.setCenter(moveLatLon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 오버레이 생성</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    setOverLay = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">var</span> LatLng = <span class="hljs-keyword">this</span>.props.LatLng;</span><br><span class="line">        <span class="hljs-keyword">let</span> &#123; x, y , data&#125; = LatLng;</span><br><span class="line">        <span class="hljs-comment">// console.log(data);</span></span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">this</span>.kakao === <span class="hljs-string">'undefined'</span> || <span class="hljs-keyword">this</span>.kakao == <span class="hljs-literal">null</span> || !data) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment">// 커스텀 오버레이에 표시할 내용입니다     </span></span><br><span class="line">        <span class="hljs-comment">// HTML 문자열 또는 Dom Element 입니다 </span></span><br><span class="line">        <span class="hljs-keyword">var</span> content = <span class="hljs-string">`</span></span><br><span class="line"><span class="hljs-string">            &lt;div id="overlay-area" class="arrow_box"&gt;</span></span><br><span class="line"><span class="hljs-string">                &lt;ul&gt;</span></span><br><span class="line"><span class="hljs-string">                    &lt;li&gt;<span class="hljs-subst">$&#123;data.address_name&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="hljs-string">                    &lt;li&gt;<span class="hljs-subst">$&#123;data.category_name&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="hljs-string">                    &lt;li&gt;<span class="hljs-subst">$&#123;data.phone&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="hljs-string">                    &lt;li&gt;<span class="hljs-subst">$&#123;data.place_name&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="hljs-string">                    &lt;li&gt;<span class="hljs-subst">$&#123;data.place_url&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="hljs-string">                &lt;ul&gt;</span></span><br><span class="line"><span class="hljs-string">            &lt;/div&gt;</span></span><br><span class="line"><span class="hljs-string">        `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment">// 커스텀 오버레이가 표시될 위치입니다 </span></span><br><span class="line">        <span class="hljs-keyword">var</span> position = <span class="hljs-keyword">new</span> kakao.maps.LatLng(y, x);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment">// 커스텀 오버레이를 생성합니다</span></span><br><span class="line">        <span class="hljs-keyword">this</span>.customOverlay = <span class="hljs-keyword">new</span> kakao.maps.CustomOverlay(&#123;</span><br><span class="line">            position: position,</span><br><span class="line">            content: content</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment">// 커스텀 오버레이를 지도에 표시합니다</span></span><br><span class="line">        <span class="hljs-keyword">this</span>.customOverlay.setMap(<span class="hljs-keyword">this</span>.map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 카카오 맵 생성</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    setKakaoMap = <span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="hljs-keyword">var</span> &#123;x , y&#125; = <span class="hljs-keyword">this</span>.props.LatLng;</span><br><span class="line">        <span class="hljs-keyword">const</span> &#123;API_KEY&#125; = <span class="hljs-keyword">this</span>.state; </span><br><span class="line">        <span class="hljs-keyword">const</span> kakao_url = <span class="hljs-string">`http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&amp;appkey=<span class="hljs-subst">$&#123;API_KEY&#125;</span>`</span>;</span><br><span class="line">        <span class="hljs-keyword">var</span> that = <span class="hljs-keyword">this</span>;</span><br><span class="line">        $script(kakao_url, () =&gt; &#123;</span><br><span class="line">            <span class="hljs-comment">//console.log();</span></span><br><span class="line">            <span class="hljs-comment">// golobal setting</span></span><br><span class="line"></span><br><span class="line">            <span class="hljs-comment">/*global kakao*/</span></span><br><span class="line">            <span class="hljs-keyword">this</span>.kakao = kakao;</span><br><span class="line">            kakao.maps.load(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="line">                <span class="hljs-comment">// v3가 모두 로드된 후, 이 콜백 함수가 실행됩니다.</span></span><br><span class="line">                that.kakao = kakao;</span><br><span class="line">                that.map = <span class="hljs-keyword">new</span> that.kakao.maps.Map(that.appRef.current, &#123;</span><br><span class="line">                    center: <span class="hljs-keyword">new</span> that.kakao.maps.LatLng(y, x), <span class="hljs-comment">// 지도의 중심좌표</span></span><br><span class="line">                    level: <span class="hljs-number">3</span> <span class="hljs-comment">// 지도의 확대 레벨</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="hljs-keyword">const</span> &#123; setLoading &#125; = <span class="hljs-keyword">this</span>.state</span><br><span class="line">        <span class="hljs-keyword">return</span> (</span><br><span class="line">            (setLoading)?</span><br><span class="line">                &lt;div&gt;Looooooooooooading....&lt;<span class="hljs-regexp">/div&gt;</span></span><br><span class="line"><span class="hljs-regexp">                : &lt;div style=&#123;&#123; 'height': '850px' &#125;&#125; ref=&#123;this.appRef&#125; /</span>&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> react.js </tag>
            
            <tag> javascript </tag>
            
            <tag> fron-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>basic auth 구현 및 설명</title>
      <link href="/2019/07/18/basic-auth-%EA%B5%AC%ED%98%84-%EB%B0%8F-%EC%84%A4%EB%AA%85/"/>
      <url>/2019/07/18/basic-auth-%EA%B5%AC%ED%98%84-%EB%B0%8F-%EC%84%A4%EB%AA%85/</url>
      
        <content type="html"><![CDATA[<h2 id="basic-auth-이란"><a href="#basic-auth-이란" class="headerlink" title="basic auth 이란"></a>basic auth 이란</h2><p>api 서버에서 데이터을 요구할때 http Authorization 헤더에 user id 와 , password 을 base64 로 인코딩한 문자열을 추가하여 인증하는 형식</p><ul><li>참고 :  <a href="https://hamait.tistory.com/416" target="_blank" rel="noopener">HTTP 기본인증</a></li></ul><h2 id="구현"><a href="#구현" class="headerlink" title="구현"></a>구현</h2><ul><li><p>config 설정</p>  <figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">   <span class="hljs-meta">@Autowired</span></span><br><span class="line">   <span class="hljs-keyword">private</span> AuthProvider authProvider;</span><br><span class="line"></span><br><span class="line">   <span class="hljs-meta">@Override</span></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * 스크링 시큐리트를 통하여 접근페이지 설정</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">configure</span><span class="hljs-params">(HttpSecurity http)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;</span><br><span class="line">http</span><br><span class="line">.logout()</span><br><span class="line">       .logoutUrl(<span class="hljs-string">"/api/logout"</span>)</span><br><span class="line">       .and()</span><br><span class="line">       .csrf()</span><br><span class="line">       .disable()</span><br><span class="line">       .authorizeRequests()</span><br><span class="line">       .antMatchers(</span><br><span class="line">       <span class="hljs-string">"/"</span>,</span><br><span class="line">               <span class="hljs-string">"/api/v1/user/join"</span>,</span><br><span class="line">               <span class="hljs-string">"/static/**"</span></span><br><span class="line">       ).permitAll()</span><br><span class="line">       .anyRequest().authenticated()</span><br><span class="line">       .and()</span><br><span class="line">       .headers().frameOptions().sameOrigin()</span><br><span class="line">       .and()</span><br><span class="line">       .httpBasic()</span><br><span class="line">       .authenticationEntryPoint(<span class="hljs-keyword">new</span> NoPopupBasicAuthenticationEntryPoint()) ;</span><br><span class="line">    http.authenticationProvider(authProvider);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>  http.authenticationProvider 부분에 authProvider 추가</p></li><li><p>AuthProvider.java</p>  <figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.jeaeok.myproject.testApp.configs;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.List;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.authentication.AuthenticationProvider;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> com.jeaeok.myproject.testApp.domain.MyAuthenticaion;</span><br><span class="line"><span class="hljs-keyword">import</span> com.jeaeok.myproject.testApp.domain.User;</span><br><span class="line"><span class="hljs-keyword">import</span> com.jeaeok.myproject.testApp.services.UserService;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">@Component</span>(<span class="hljs-string">"authProvider"</span>)</span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">* 로그인 확인 하는 클레스</span></span><br><span class="line"><span class="hljs-comment">* <span class="hljs-doctag">@author</span> atcis</span></span><br><span class="line"><span class="hljs-comment">*</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AuthProvider</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">AuthenticationProvider</span>  </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-meta">@Autowired</span></span><br><span class="line">    <span class="hljs-keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="hljs-meta">@Autowired</span></span><br><span class="line">    <span class="hljs-keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> Authentication <span class="hljs-title">authenticate</span><span class="hljs-params">(Authentication authentication)</span> <span class="hljs-keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        String id = authentication.getName();</span><br><span class="line">        String password = authentication.getCredentials().toString();</span><br><span class="line"></span><br><span class="line">        User user_info = userService.getUser(id);</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == user_info || !passwordEncoder.matches(password, user_info.getUserPassword())) &#123;</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        List&lt;GrantedAuthority&gt; grantedAuthorityList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="hljs-keyword">if</span> (user_info.isAdmin()) &#123;</span><br><span class="line">            grantedAuthorityList.add(<span class="hljs-keyword">new</span> SimpleGrantedAuthority(<span class="hljs-string">"ROLE_USER"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> MyAuthenticaion(id, password, grantedAuthorityList, user_info);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">supports</span><span class="hljs-params">(Class&lt;?&gt; authentication)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> authentication.equals(UsernamePasswordAuthenticationToken.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  authentication.getName() : basic auth 부분에 id <br><br>   authentication.getCredentials().toString() : basic auth 부분에 password <br></p></li><li><p>basic auth 은 base64 로 인코딩 되어 전송되기 때문에 중간자 공격에 취약할수도 있음</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> spring </tag>
            
            <tag> spring boot </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Security 에서 로그인 팝업창 안나오게 설정</title>
      <link href="/2019/07/18/Spring-Security-%EC%97%90%EC%84%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%8C%9D%EC%97%85%EC%B0%BD-%EC%95%88%EB%82%98%EC%98%A4%EA%B2%8C-%EC%84%A4%EC%A0%95/"/>
      <url>/2019/07/18/Spring-Security-%EC%97%90%EC%84%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%8C%9D%EC%97%85%EC%B0%BD-%EC%95%88%EB%82%98%EC%98%A4%EA%B2%8C-%EC%84%A4%EC%A0%95/</url>
      
        <content type="html"><![CDATA[<ul><li>Spring Security 을 사용하면 가끔식 로그인 팝업창이 나오는데 출력을 헤제할수가 있다.</li><li><p>중요한건 NoPopupBasicAuthenticationEntryPoint.java 에서 제어하는 것이다.</p><ul><li><p>WebSecurityConfig.java</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.jeaeok.myproject.testApp.configs;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">@Configuration</span></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">* 스프링 시큐리티 설정</span></span><br><span class="line"><span class="hljs-comment">* <span class="hljs-doctag">@author</span> atcis</span></span><br><span class="line"><span class="hljs-comment">*</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WebSecurityConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-meta">@Autowired</span></span><br><span class="line">    <span class="hljs-keyword">private</span> AuthProvider authProvider;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="hljs-meta">@Bean</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> PasswordEncoder <span class="hljs-title">getEncoder</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">    * 스크링 시큐리트를 통하여 접근페이지 설정</span></span><br><span class="line"><span class="hljs-comment">    */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">configure</span><span class="hljs-params">(HttpSecurity http)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        http</span><br><span class="line">        .logout()                                                                </span><br><span class="line">        .logoutUrl(<span class="hljs-string">"/api/logout"</span>)</span><br><span class="line">        .and()</span><br><span class="line">        .csrf()</span><br><span class="line">        .disable()</span><br><span class="line">        .authorizeRequests()</span><br><span class="line">        .antMatchers(</span><br><span class="line">                <span class="hljs-string">"/"</span>,</span><br><span class="line">                <span class="hljs-string">"/api/v1/user/join"</span>,</span><br><span class="line">                <span class="hljs-string">"/static/**"</span></span><br><span class="line">        ).permitAll()</span><br><span class="line">        .anyRequest().authenticated()</span><br><span class="line">        .and()</span><br><span class="line">        .headers().frameOptions().sameOrigin()</span><br><span class="line">        .and()</span><br><span class="line">        .httpBasic()</span><br><span class="line">        .authenticationEntryPoint(<span class="hljs-keyword">new</span> NoPopupBasicAuthenticationEntryPoint())</span><br><span class="line">        ;</span><br><span class="line">        </span><br><span class="line">        http.authenticationProvider(authProvider);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>NoPopupBasicAuthenticationEntryPoint.java</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.jeaeok.myproject.testApp.configs;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="hljs-keyword">import</span> org.springframework.security.web.AuthenticationEntryPoint;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NoPopupBasicAuthenticationEntryPoint</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">AuthenticationEntryPoint</span> </span>&#123;</span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">commence</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class="hljs-keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        response.sendError(HttpServletResponse.SC_UNAUTHORIZED, authException.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
            <tag> spring boot </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java 랜덤 문자열 생성</title>
      <link href="/2019/07/18/java-%EB%9E%9C%EB%8D%A4-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%83%9D%EC%84%B1/"/>
      <url>/2019/07/18/java-%EB%9E%9C%EB%8D%A4-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%83%9D%EC%84%B1/</url>
      
        <content type="html"><![CDATA[<ul><li><p>pom.xml 추가</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang3<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>랜덤 문자열 생성 : 알파벳 랜덤 5개 생성</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RandomStringUtils.randomAlphabetic(<span class="hljs-number">5</span>)</span><br></pre></td></tr></table></figure></li><li><p>랜덤 문자열 생성 : 숫자포함 알파벳 랜덤 5개 생성</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RandomStringUtils.randomAlphanumeric(<span class="hljs-number">5</span>)</span><br></pre></td></tr></table></figure></li><li><p>랜덤 문자열 생성 : 아스키 코드 랜덤 5개 생성</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RandomStringUtils.randomAscii(<span class="hljs-number">5</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>setState() 제어</title>
      <link href="/2019/07/18/setState-%EC%A0%9C%EC%96%B4/"/>
      <url>/2019/07/18/setState-%EC%A0%9C%EC%96%B4/</url>
      
        <content type="html"><![CDATA[<p>react.js 을 이용하다 보면 상태변경을 위하여 setState() 을 자주 사용하게 된다. <br><br><br>하지만 setState() 메서드는 비동기 형식이기 때문에 순서를 제어하기 힘들다. <br><br><br>만약 setState() 을 사용후에 별도의 메서드를 실행할려도 할때 다음처럼 이용하면 된다. <br><br></p><ul><li>예시 <figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">this</span>.setState(&#123;</span><br><span class="line">    setLoading: <span class="hljs-literal">true</span>,</span><br><span class="line">&#125;, ()=&gt;&#123;</span><br><span class="line">    setTimeout(<span class="hljs-keyword">this</span>.setState(&#123; <span class="hljs-attr">setLoading</span>: <span class="hljs-literal">false</span>, &#125;), <span class="hljs-number">1000</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> react.js </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>componentDidUpdate() 내부에 setstate() 사용여부</title>
      <link href="/2019/07/18/componentDidUpdate-%EB%82%B4%EB%B6%80%EC%97%90-setstate-%EC%82%AC%EC%9A%A9%EC%97%AC%EB%B6%80/"/>
      <url>/2019/07/18/componentDidUpdate-%EB%82%B4%EB%B6%80%EC%97%90-setstate-%EC%82%AC%EC%9A%A9%EC%97%AC%EB%B6%80/</url>
      
        <content type="html"><![CDATA[<p>react.js 을 사용하다 보면 부모 component 에서 prop 값이 변경될때 componentDidUpdate 을 사용하게된다.<br><br><br>하지만 componentDidUpdate 내부에서 setstate() 을 사용할경우 무한 루프에 빠지게 되어<br><br><br>다음과 같은 에러가 발생하게 된다.<br><img src="/2019/07/18/componentDidUpdate-내부에-setstate-사용여부/error.png" title="spaced title"><br><br><br><br>이를 해결하기 위해서는  componentDidUpdate 내부에서 setstate() 사용시 if 문을 이용하여 제어해야 한다.<br><br><br></p><ul><li>예시<figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">componentDidUpdate(previousProps, previousState) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> (previousProps.data !== <span class="hljs-keyword">this</span>.props.data) &#123;</span><br><span class="line">        <span class="hljs-keyword">this</span>.setState(&#123;<span class="hljs-comment">/*....*/</span>&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>아니면 componentDidUpdate 대신 componentWillReceiveProps 을 사용하면 된다. </p><ul><li>componentWillReceiveProps() : 해당 component 에서 mount 하기전에 실행되어 props 을 받음 </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> react.js </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvm 설치 (node version manager)</title>
      <link href="/2019/07/18/nvm-%EC%84%A4%EC%B9%98-node-version-manager/"/>
      <url>/2019/07/18/nvm-%EC%84%A4%EC%B9%98-node-version-manager/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>node.js 을 사용하다 보면 빠르게 버젼업이 되고 있으며 그로 인하여 패키지는 node 버젼이 안맞아서 충돌이 발생하기도 한다.<br><br>nvm 을 이용하면 손쉽게 node.js 버젼관리가 되며 npm global 설치시 별도의 관리자 권한을 안줘도 된다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>설치는 단순하다.</p><ol><li><p>install script 다운 및 설치</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure><p>자동으로 ~/.bash_profile, ~/.zshrc, ~/.profile, ~/.bashrc 에 nvm 명령어가 추가 되겠지만 만약 안될수도 있다. <br><br>그럴경우에는 직접 스크립트를 수정한다. </p></li><li>~/.zshrc 수정<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NVM_DIR=~/.nvm</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="실행"><a href="#실행" class="headerlink" title="실행"></a>실행</h2><p>node.js 을 설치 하고자 할때<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install node</span><br></pre></td></tr></table></figure></p><p>혹은<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install 6.14.4</span><br></pre></td></tr></table></figure></p><h2 id="제거"><a href="#제거" class="headerlink" title="제거"></a>제거</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall node</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>지뢰찾기 구현</title>
      <link href="/2019/07/18/%EC%A7%80%EB%A2%B0%EC%B0%BE%EA%B8%B0-%EA%B5%AC%ED%98%84/"/>
      <url>/2019/07/18/%EC%A7%80%EB%A2%B0%EC%B0%BE%EA%B8%B0-%EA%B5%AC%ED%98%84/</url>
      
        <content type="html"><![CDATA[<h1 id="the-mine-sweeper"><a href="#the-mine-sweeper" class="headerlink" title="the-mine-sweeper"></a>the-mine-sweeper</h1><p>React.js 을 이용하여 만든 지뢰찾기 입니다.</p><img src="/2019/07/18/지뢰찾기-구현/img1.gif" title="spaced title"><h2 id="실행-방법"><a href="#실행-방법" class="headerlink" title="실행 방법"></a>실행 방법</h2><ol><li>node.js , npm 을 설치 합니다.</li><li><p>the-mine-sweeper 폴더로 이동후에 다음 명령어를 실행합니다.</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> npm install</span></span><br></pre></td></tr></table></figure></li><li><p>node module 을 설치 하고 나서 다음 명령어를 입력하여 dev server 을 실행합니다.</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> npm start</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="권장-사항"><a href="#권장-사항" class="headerlink" title="권장 사항"></a>권장 사항</h2><ul><li>최신 버젼의 Chrome, Firefox, Safari, Edge 에서 실행을 권장합니다.</li></ul><h2 id="빌드방법"><a href="#빌드방법" class="headerlink" title="빌드방법"></a>빌드방법</h2><ol><li><p>the-mine-sweeper 폴더로 이동후에 다음 명령어를 실행합니다.</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> npm run build</span></span><br></pre></td></tr></table></figure></li><li><p>the-mine-sweeper/build 폴더내의 파일들을 웹서버에 업로드 합니다.</p></li><li><p>만약 직접 실행할경우 다음 명령어를 입력합니다.</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> npm install -g serve</span></span><br><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> serve -s build</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>다음 홈페이지에 접속하면 실제 페이지를 볼수 있습니다.</p><ul><li><a href="https://hardwooooooork.github.io/the-mine-sweeper/" target="_blank" rel="noopener">https://hardwooooooork.github.io/the-mine-sweeper/</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css margin, padding 한줄에 적을 때 순서</title>
      <link href="/2019/07/16/css-margin-padding-%ED%95%9C%EC%A4%84%EC%97%90-%EC%A0%81%EC%9D%84-%EB%95%8C-%EC%88%9C%EC%84%9C/"/>
      <url>/2019/07/16/css-margin-padding-%ED%95%9C%EC%A4%84%EC%97%90-%EC%A0%81%EC%9D%84-%EB%95%8C-%EC%88%9C%EC%84%9C/</url>
      
        <content type="html"><![CDATA[<ul><li>계속 사용하지만 기억이 안나서 따로 적는다. </li><li>padding 도 동일하다.</li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">margin: [margin-top] [margin-right] [margin-bottom] [margin-left];</span><br><span class="line">margin: [margin-top] [margin-left = margin-right] [margin-bottom];</span><br><span class="line">margin: [margin-top=margin-bottom] [margin-left = margin-right];</span><br><span class="line">margin: [margin-top = margin-bottom = margin-left = margin-right];</span><br></pre></td></tr></table></figure><ul><li>순서는 상 하 좌 우 이니 참고하자</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 에서 페이지가 깨질때</title>
      <link href="/2019/07/15/hexo-%EC%97%90%EC%84%9C-%ED%8E%98%EC%9D%B4%EC%A7%80%EA%B0%80-%EA%B9%A8%EC%A7%88%EB%95%8C/"/>
      <url>/2019/07/15/hexo-%EC%97%90%EC%84%9C-%ED%8E%98%EC%9D%B4%EC%A7%80%EA%B0%80-%EA%B9%A8%EC%A7%88%EB%95%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h2><p>hexo 에서 hexo deploy 을 실행후 다음과 같은 에러 발생<br><img src="/2019/07/15/hexo-에서-페이지가-깨질때/error.png" title="spaced title"></p><h2 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h2><p>이전의 deploy 할때의 css 파일이 남아서 생긴문제</p><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>다음 명령어 입력<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p><p>입력후 정상적으로 동작확인<br><img src="/2019/07/15/hexo-에서-페이지가-깨질때/good.png" title="spaced title"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mp4 -&gt; gif 로 파일변환</title>
      <link href="/2019/07/08/mp4-gif-%EB%A1%9C-%ED%8C%8C%EC%9D%BC%EB%B3%80%ED%99%98/"/>
      <url>/2019/07/08/mp4-gif-%EB%A1%9C-%ED%8C%8C%EC%9D%BC%EB%B3%80%ED%99%98/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>markdown 으로 문서작성간에 실제 사용하는 장면을 추가하고 싶지만 동영상 파일자체의 용량도 크고 마크다운에서는 이미지만 첨부가능 하여 방법을 찾다가. gif 로 변환하여 첨부하기로 했다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S ffmpeg</span><br></pre></td></tr></table></figure><h2 id="mp4-gt-gif"><a href="#mp4-gt-gif" class="headerlink" title="mp4 -&gt; gif"></a>mp4 -&gt; gif</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i Screencast\ 2019-07-07\ 16:27:53.mp4 Screencast\ 2019-07-07\ 16:27:53.gif</span><br></pre></td></tr></table></figure><p>이렇게 변환을 했더니 용량이 50메가 넘게 나와서 업로드가 안되었다. 프레임을 낮추어서 변환을 진행했다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i Screencast\ 2019-07-07\ 16:27:53.mp4 -r 5 Screencast\ 2019-07-07\ 16:27:53.gif</span><br></pre></td></tr></table></figure><p>-r 5 옵션은 5프레임으로 설정한다는 뜻이다. <br><br><br>변환후에 용량을 확인해보니 20메가 이하로 줄었다.</p><ul><li>확인해보니 샤나인코더도 ffmpeg 기반이라고 한다. <a href="https://namu.wiki/w/FFmpeg" target="_blank" rel="noopener">https://namu.wiki/w/FFmpeg</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 문서에서 word 문서로 변환</title>
      <link href="/2019/07/08/markdown-%EB%AC%B8%EC%84%9C%EC%97%90%EC%84%9C-word-%EB%AC%B8%EC%84%9C%EB%A1%9C-%EB%B3%80%ED%99%98/"/>
      <url>/2019/07/08/markdown-%EB%AC%B8%EC%84%9C%EC%97%90%EC%84%9C-word-%EB%AC%B8%EC%84%9C%EB%A1%9C-%EB%B3%80%ED%99%98/</url>
      
        <content type="html"><![CDATA[<h2 id="markdown-문서-gt-워드형식으로-변환"><a href="#markdown-문서-gt-워드형식으로-변환" class="headerlink" title="markdown 문서 -&gt; 워드형식으로 변환"></a>markdown 문서 -&gt; 워드형식으로 변환</h2><p>markdown 문서를 작성하다가 워드형식으로 문서가 필요했고 마크다운에서 복붙하기에는 양식이 깨져서 문제가 있었다. <br><br>해결방안을 찾다가 pandoc 이라는 것을 찾아서 적용하기로 했다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S pandoc</span><br></pre></td></tr></table></figure><p>지금 사용하는 리눅스는 manjaro 이니 설치한 리늑스에 맞추어서 사용하면 된다.</p><h2 id="변환"><a href="#변환" class="headerlink" title="변환"></a>변환</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pandoc README.md -f markdown -t docx -s -o README.docx</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><p><a href="https://hue9010.github.io/etc/pandoc/" target="_blank" rel="noopener">https://hue9010.github.io/etc/pandoc/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>manjaro 에서 update 할때 npm : /usr/lib/node_modules/npm/node_modules/query-string/index.d.ts 증복오류 발생</title>
      <link href="/2019/07/05/manjaro-%EC%97%90%EC%84%9C-update-%ED%95%A0%EB%95%8C-npm-usr-lib-node-modules-npm-node-modules-query-string-index-d-ts-%EC%A6%9D%EB%B3%B5%EC%98%A4%EB%A5%98-%EB%B0%9C%EC%83%9D/"/>
      <url>/2019/07/05/manjaro-%EC%97%90%EC%84%9C-update-%ED%95%A0%EB%95%8C-npm-usr-lib-node-modules-npm-node-modules-query-string-index-d-ts-%EC%A6%9D%EB%B3%B5%EC%98%A4%EB%A5%98-%EB%B0%9C%EC%83%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h2><p>과게에 npm 을 pacman 으로 설치하고 최근에 npm install -g npm 을 해서 중복된 파일이 발생하여 무결성 검사에 실패함</p><h2 id="조치"><a href="#조치" class="headerlink" title="조치"></a>조치</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> sudo pacman -S npm --overwrite /usr/lib/node_modules/npm/node_modules/query-string/index.d.ts</span></span><br></pre></td></tr></table></figure><p>명령어로 해결</p><p>pacman 설치시 중복된 파일이 있을경우 –overwrite /filepath 을 사용하자</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> manjaro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>manjaro 에서 pacman 이용시 pgp 에러 발생시</title>
      <link href="/2019/06/08/manjaro-%EC%97%90%EC%84%9C-pacman-%EC%9D%B4%EC%9A%A9%EC%8B%9C-pgp-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%EC%8B%9C/"/>
      <url>/2019/06/08/manjaro-%EC%97%90%EC%84%9C-pacman-%EC%9D%B4%EC%9A%A9%EC%8B%9C-pgp-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%EC%8B%9C/</url>
      
        <content type="html"><![CDATA[<ul><li><p>pacman -Syyu 입력시 다음 에러가 발생할경우</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pacman -Syyu</span><br><span class="line">error: fzf: signature from &quot;Ambrevar &lt;ambrevar@gmail.com&gt;&quot; is unknown trust :: File /var/cache/pacman/pkg/fzf-0.17.0.2-1-x86_64.pkg.tar.xz is corrupted (invalid or corrupted package (PGP signature)).</span><br></pre></td></tr></table></figure></li><li><p>다음 명령어로 해결한다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --refresh-keys</span><br></pre></td></tr></table></figure></li><li><p>다음 에러가 추가 발생시</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -Syu</span><br><span class="line">error: GPGME error: No data</span><br><span class="line">error: GPGME error: No data</span><br><span class="line">error: GPGME error: No data</span><br><span class="line">error: GPGME error: No data</span><br></pre></td></tr></table></figure></li><li><p>다음 명령어를 입력한다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy archlinux-keyring manjaro-keyring</span><br><span class="line">sudo pacman-key --populate archlinux manjaro</span><br></pre></td></tr></table></figure></li><li><p>다음에 다시한번 확인한다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure></li></ul><p>원인은 자세하게 확인해봐야 하겠지만 업데이트 서버에 있는 서명과 내노트북에 있는 서명값이 달라서 생긴것 같다.</p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> manjaro </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>minishift install 하기</title>
      <link href="/2019/05/21/minishift-install-%ED%95%98%EA%B8%B0/"/>
      <url>/2019/05/21/minishift-install-%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-개요"><a href="#1-개요" class="headerlink" title="1. 개요"></a>1. 개요</h2><h2 id="2-설치"><a href="#2-설치" class="headerlink" title="2. 설치"></a>2. 설치</h2><p><a href="https://docs.okd.io/latest/minishift/getting-started/setting-up-virtualization-environment.html" target="_blank" rel="noopener">https://docs.okd.io/latest/minishift/getting-started/setting-up-virtualization-environment.html</a> 참고</p><h3 id="2-1-libvirt-qemu-dnsmasq-ebtables-설치"><a href="#2-1-libvirt-qemu-dnsmasq-ebtables-설치" class="headerlink" title="2.1. libvirt qemu dnsmasq ebtables 설치"></a>2.1. libvirt qemu dnsmasq ebtables 설치</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S libvirt qemu dnsmasq ebtables</span><br></pre></td></tr></table></figure><h3 id="2-2-로그인된-계정을-kvm-libvir-그룹에-추가"><a href="#2-2-로그인된-계정을-kvm-libvir-그룹에-추가" class="headerlink" title="2.2. 로그인된 계정을 kvm,libvir 그룹에 추가"></a>2.2. 로그인된 계정을 kvm,libvir 그룹에 추가</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo usermod -a -G kvm,libvirt $(whoami)</span><br></pre></td></tr></table></figure><h3 id="2-3-etc-libvirt-qemu-conf-내용-추가"><a href="#2-3-etc-libvirt-qemu-conf-내용-추가" class="headerlink" title="2.3. /etc/libvirt/qemu.conf 내용 추가"></a>2.3. /etc/libvirt/qemu.conf 내용 추가</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sed -ri &apos;s/.?group\s?=\s?&quot;.+&quot;/group = &quot;kvm&quot;/1&apos; /etc/libvirt/qemu.conf</span><br></pre></td></tr></table></figure><h3 id="2-4-libvirt-그룸생성"><a href="#2-4-libvirt-그룸생성" class="headerlink" title="2.4. libvirt 그룸생성"></a>2.4. libvirt 그룸생성</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ newgrp libvirt</span><br></pre></td></tr></table></figure><h3 id="2-5-root-계정에서-KVM-driver-binary-설치"><a href="#2-5-root-계정에서-KVM-driver-binary-설치" class="headerlink" title="2.5. root 계정에서 KVM driver binary 설치"></a>2.5. root 계정에서 KVM driver binary 설치</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># curl -L https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.10.0/docker-machine-driver-kvm-centos7 -o /usr/local/bin/docker-machine-driver-kvm</span><br><span class="line"># chmod +x /usr/local/bin/docker-machine-driver-kvm</span><br></pre></td></tr></table></figure><h3 id="2-6-libvirt-networking-설정"><a href="#2-6-libvirt-networking-설정" class="headerlink" title="2.6. libvirt networking 설정"></a>2.6. libvirt networking 설정</h3><h4 id="2-6-1-네트워크-확인"><a href="#2-6-1-네트워크-확인" class="headerlink" title="2.6.1 네트워크 확인"></a>2.6.1 네트워크 확인</h4><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> sudo virsh net-list --all</span><br><span class="line"> 이름              상태     자동 시작   Persistent</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> default           활성화   예          예</span><br><span class="line"> docker-machines   활성화   예          예</span><br><span class="line"> minikube-net      활성화   예          예</span><br></pre></td></tr></table></figure><h4 id="2-6-2-default-libvirt-network-시작"><a href="#2-6-2-default-libvirt-network-시작" class="headerlink" title="2.6.2 default libvirt network 시작"></a>2.6.2 default libvirt network 시작</h4><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo virsh net-start default</span><br></pre></td></tr></table></figure><h4 id="2-6-3-libvirt-network-자동시작-설정"><a href="#2-6-3-libvirt-network-자동시작-설정" class="headerlink" title="2.6.3 libvirt network 자동시작 설정"></a>2.6.3 libvirt network 자동시작 설정</h4><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo virsh net-autostart default</span><br></pre></td></tr></table></figure><h3 id="2-3-minishift-설치"><a href="#2-3-minishift-설치" class="headerlink" title="2.3. minishift 설치"></a>2.3. minishift 설치</h3><img src="/2019/05/21/minishift-install-하기/minishift.png" title="minishift.png"><h2 id="3-minishift-시작"><a href="#3-minishift-시작" class="headerlink" title="3. minishift 시작"></a>3. minishift 시작</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ minishift start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>revealjs 에서 pdf 출력</title>
      <link href="/2019/05/20/revealjs-%EC%97%90%EC%84%9C-pdf-%EC%B6%9C%EB%A0%A5/"/>
      <url>/2019/05/20/revealjs-%EC%97%90%EC%84%9C-pdf-%EC%B6%9C%EB%A0%A5/</url>
      
        <content type="html"><![CDATA[<p>revealjs 페이지 에서 다음 주소를 추가<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://100milliongold.github.io/presentation/reveal.js.html?print-pdf</span><br></pre></td></tr></table></figure></p><p><a href="https://100milliongold.github.io/presentation/reveal.js.html?print-pdf">https://100milliongold.github.io/presentation/reveal.js.html?print-pdf</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> revealjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vagrant 에서 메모리 CPU 코어수 조정</title>
      <link href="/2019/05/15/Vagrant-%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-CPU-%EC%BD%94%EC%96%B4%EC%88%98-%EC%A1%B0%EC%A0%95/"/>
      <url>/2019/05/15/Vagrant-%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-CPU-%EC%BD%94%EC%96%B4%EC%88%98-%EC%A1%B0%EC%A0%95/</url>
      
        <content type="html"><![CDATA[<p>메모리 할당을 설정시 Vagrantfile 에서 다음 항목을 추가한다.<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vm.customize ["modifyvm", :id, "--memory", 2048]</span><br></pre></td></tr></table></figure></p><p>아니면 CPU 설정시 다음 항목을 수정한다.<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vm.customize ["modifyvm", :id, "--cpus", 2]</span><br></pre></td></tr></table></figure></p><p>Vagrantfile 예시<br><figure class="highlight ruby hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="hljs-comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line">hosts = &#123;</span><br><span class="line">  <span class="hljs-string">"n1"</span> =&gt; <span class="hljs-string">"192.168.77.10"</span>,</span><br><span class="line">  <span class="hljs-string">"n2"</span> =&gt; <span class="hljs-string">"192.168.77.11"</span>,</span><br><span class="line">  <span class="hljs-string">"n3"</span> =&gt; <span class="hljs-string">"192.168.77.12"</span>,</span><br><span class="line">  <span class="hljs-string">"n4"</span> =&gt; <span class="hljs-string">"192.168.77.13"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vagrant.configure(<span class="hljs-string">"2"</span>) <span class="hljs-keyword">do</span> <span class="hljs-params">|config|</span></span><br><span class="line"></span><br><span class="line">  config.ssh.insert_key     = <span class="hljs-literal">false</span></span><br><span class="line">  config.ssh.forward_agent  = <span class="hljs-literal">true</span></span><br><span class="line">  check_guest_additions     = <span class="hljs-literal">false</span></span><br><span class="line">  functional_vboxsf         = <span class="hljs-literal">false</span></span><br><span class="line"></span><br><span class="line">  config.vm.box = <span class="hljs-string">"bento/ubuntu-16.04"</span></span><br><span class="line"></span><br><span class="line">  hosts.each <span class="hljs-keyword">do</span> <span class="hljs-params">|name, ip|</span></span><br><span class="line">    config.vm.define name <span class="hljs-keyword">do</span> <span class="hljs-params">|machine|</span></span><br><span class="line">      machine.vm.network <span class="hljs-symbol">:private_network</span>, <span class="hljs-symbol">ip:</span> ip</span><br><span class="line">      machine.vm.provider <span class="hljs-string">"virtualbox"</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|v|</span></span><br><span class="line">        v.customize [<span class="hljs-string">"modifyvm"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--cpus"</span>, <span class="hljs-number">2</span>]</span><br><span class="line">        v.name = name</span><br><span class="line">      <span class="hljs-keyword">end</span></span><br><span class="line">    <span class="hljs-keyword">end</span></span><br><span class="line">  <span class="hljs-keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">end</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> vagrant </tag>
            
            <tag> virsualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip - locale.Error: unsupported locale setting</title>
      <link href="/2019/05/15/pip-locale-Error-unsupported-locale-setting/"/>
      <url>/2019/05/15/pip-locale-Error-unsupported-locale-setting/</url>
      
        <content type="html"><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>sudo pip install ansible 입력시 다음과 같은 에러발생<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vagrant@vagrant:~$ sudo pip install ansible</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/bin/pip&quot;, line 11, in &lt;module&gt;</span><br><span class="line">    sys.exit(main())</span><br><span class="line">  File &quot;/usr/lib/python2.7/dist-packages/pip/__init__.py&quot;, line 215, in main</span><br><span class="line">    locale.setlocale(locale.LC_ALL, &apos;&apos;)</span><br><span class="line">  File &quot;/usr/lib/python2.7/locale.py&quot;, line 581, in setlocale</span><br><span class="line">    return _setlocale(category, locale)</span><br><span class="line">locale.Error: unsupported locale setting</span><br></pre></td></tr></table></figure></li></ul><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><ul><li><p>다음 명령어를 입력하여 해결</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vagrant@vagrant:~$ export LC_ALL=&quot;en_US.UTF-8&quot;</span><br><span class="line">vagrant@vagrant:~$ export LC_CTYPE=&quot;en_US.UTF-8&quot;</span><br><span class="line">vagrant@vagrant:~$ sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure></li><li><p>다음 창이 나오면 “en_US.UTF-8 UTF-8” 이 체크되어 있는지 확인후에 탭키로 OK 항목으로 이동후 엔터</p></li></ul><img src="/2019/05/15/pip-locale-Error-unsupported-locale-setting/screen_shot.png" title="spaced title"> ]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> python </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AUR(yaourt) 설치 절차 및 debtap</title>
      <link href="/2019/05/14/AUR-yaourt-%EC%84%A4%EC%B9%98-%EC%A0%88%EC%B0%A8/"/>
      <url>/2019/05/14/AUR-yaourt-%EC%84%A4%EC%B9%98-%EC%A0%88%EC%B0%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>debian 패키지를 Arch Linux 에 설치 하기 위해서는 debtap 이 필요하며 이는 AUR 을 이용하여 설치하면 된다.<br>arch linux 특징중에 하나는 유저가 패키지를 만들고 이를 공유할수 있다. 이를 이용하여 여러가지 패키지들을 설치할수 있다.</p><h2 id="설치절차"><a href="#설치절차" class="headerlink" title="설치절차"></a>설치절차</h2><h3 id="1-관련-패키지-설치"><a href="#1-관련-패키지-설치" class="headerlink" title="1. 관련 패키지 설치"></a>1. 관련 패키지 설치</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S binutils gcc pkgfile</span><br><span class="line">sudo pkgfile --update</span><br><span class="line">sudo pkgfile strip</span><br><span class="line">sudo pacman -S pkg-config</span><br><span class="line">sudo pacman -S make</span><br><span class="line">sudo pacman -S base-devel</span><br></pre></td></tr></table></figure><h3 id="2-yaourt-설치"><a href="#2-yaourt-설치" class="headerlink" title="2. yaourt 설치"></a>2. yaourt 설치</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://aur.archlinux.org/yaourt.git</span><br><span class="line">cd yaourt</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><h3 id="3-debtap-설치"><a href="#3-debtap-설치" class="headerlink" title="3. debtap 설치"></a>3. debtap 설치</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yaourt -S debtap</span><br></pre></td></tr></table></figure><h3 id="4-debtap-으로-패키지-변환하기"><a href="#4-debtap-으로-패키지-변환하기" class="headerlink" title="4. debtap 으로 패키지 변환하기"></a>4. debtap 으로 패키지 변환하기</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debtap hancomoffice-hwpviewer-Ubuntu-amd64.deb</span><br><span class="line">sudo pacman -U ./hancomoffice-hwpviewer-9.20.0.1573-1-x86_64.pkg.tar.xz</span><br></pre></td></tr></table></figure><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><p>데비안도 써보고 우분투도 써봤지만 아치리눅스 만큼 업데이트가 빠른 운영체제는 처음본거 같다.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Arch Linux </tag>
            
            <tag> manjaro </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>manjaro linux(arch linux) 에서 한컴뷰어 설치</title>
      <link href="/2019/05/13/arch-linux-%EC%97%90%EC%84%9C-%ED%95%9C%EC%BB%B4%EB%B7%B0%EC%96%B4-%EC%84%A4%EC%B9%98/"/>
      <url>/2019/05/13/arch-linux-%EC%97%90%EC%84%9C-%ED%95%9C%EC%BB%B4%EB%B7%B0%EC%96%B4-%EC%84%A4%EC%B9%98/</url>
      
        <content type="html"><![CDATA[<h1 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h1><p>참고: <a href="http://arch.korea.com/viewtopic.php?id=203" target="_blank" rel="noopener">아치리눅스 한국사용자 모임 - 한컴뷰어2014 부탁 좀 드려요..</a><br>최근에 기존에 설치되었던 우분투를 지우고 만자로 리눅스를 설치했다. apt 패키지 매니저 대신 pacman 패키지를 사용하는거 제외하고는 우분투쓰는 느낌이고 업데이트 나오는 시기가 빠르다고 하는데 아직은 모르겠다.<br>하지만 한컴뷰어를 설치하고자 했지만 유감스럽게도 Fedora 와 Ubuntu 만 제공하고 있어 아치리눅스 기반이 만자로에서는 설치가 제한이 된다.<br>그러면 한컴뷰어 설치를 포기햐야 하는가? 정답은 그렇지 않다 이다. 다행히 deb 패키지를 arch linux 패키지로 변환이 가능하다.</p><h1 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h1><ol><li>한컴 뷰어 다운로드</li><li><p>deb -&gt; pkg.tar.xz 파일로 변환</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debtap hancomoffice-hwpviewer-Ubuntu-amd64.deb</span><br></pre></td></tr></table></figure></li><li><p>한컴뷰어 설치</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -U ./hancomoffice-hwpviewer-9.20.0.1573-1-x86_64.pkg.tar.xz</span><br></pre></td></tr></table></figure><p>그런데 webkitgtk 의존성 문제가 발생했다. webkitgtk 을 설치하는데 확인해보니 AUR 로 설치해야 해서 yaourt 로 진행한다.</p></li><li><p>webkitgtk 설치</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yaourt -S webkitgtk</span><br></pre></td></tr></table></figure></li></ol><p>설치는 되는거 같은데 .. 소스코드가 많아서 그런지 반나절이 지나도 빌드가 끝나지 않는다. 설치파일을 받아서 진행을 한다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.repo.archlinuxcn.org/x86_64/webkitgtk-3%3A2.4.11-16-x86_64.pkg.tar.xz</span><br><span class="line">sudo pacman -U ./webkitgtk-3_2.4.11-16-x86_64.pkg.tar.xz</span><br></pre></td></tr></table></figure><p>  다시 3번을 진행하니 설치가 진행이 된다.<br>  그런데 이제는 실행이 안되고 콘솔에서 hwpviewer 을 실행하니 다음에러가 발생했다.<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwpviewer: error while loading shared libraries: libicui18n.so.63: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure></p><p>  확인해보니 내컴퓨터에서 설치된 icu 패키지 버젼은 64 이고 한컴뷰어에서 요구하는 icu 패키지 버젼이 63인거 같다. 하지만 pacman 에서는 icu 64 로만 설치가된다. AUR 로 설치하자</p><ol start="5"><li><p>icu63 설치</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yaourt -S icu63</span><br></pre></td></tr></table></figure><p>다행히 빌드하는데 오래걸리지는 않았다.</p></li><li><p>한컴뷰어 실행</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwpviewer</span><br></pre></td></tr></table></figure><p>이제야 실행이 된다</p><img src="/2019/05/13/arch-linux-에서-한컴뷰어-설치/hwpviewer.png" title="spaced title"></li></ol><h1 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h1><p>  설치하면서 기존의 pacman 도 좋지만 대부분 AUR 을 이용해야만 설치가 진행이 되었다.</p>]]></content>
      
      
      
        <tags>
            
            <tag> -server -arch linux -manjaro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh port forwording</title>
      <link href="/2019/04/17/ssh-port-forwording/"/>
      <url>/2019/04/17/ssh-port-forwording/</url>
      
        <content type="html"><![CDATA[<ul><li><p>local</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 80:intra.example.com:80 gw.example.com</span><br></pre></td></tr></table></figure></li><li><p>remote</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -R 8080:localhost:80 public.example.com</span><br></pre></td></tr></table></figure></li></ul><p>이를 이용하여 ssh 을 통하여 port 포워딩이 가능해진다.</p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java.io.IOException: com.jcraft.jsch.JSchException: invalid privatekey: [B@24a1c17f jsch 오류발생</title>
      <link href="/2019/03/23/java-io-IOException-com-jcraft-jsch-JSchException-invalid-privatekey-B-24a1c17f-jsch-%EC%98%A4%EB%A5%98%EB%B0%9C%EC%83%9D/"/>
      <url>/2019/03/23/java-io-IOException-com-jcraft-jsch-JSchException-invalid-privatekey-B-24a1c17f-jsch-%EC%98%A4%EB%A5%98%EB%B0%9C%EC%83%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h1><ul><li>jsch 운영간에 다음과 같은 에러발생<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Caused by: com.jcraft.jsch.JSchException: invalid privatekey: [B@24a1c17f</span><br><span class="line">   at com.jcraft.jsch.KeyPair.load(KeyPair.java:902)</span><br><span class="line">   at com.jcraft.jsch.KeyPair.load(KeyPair.java:543)</span><br><span class="line">   at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:40)</span><br><span class="line">   at com.jcraft.jsch.JSch.addIdentity(JSch.java:393)</span><br><span class="line">   at com.jcraft.jsch.JSch.addIdentity(JSch.java:353)</span><br><span class="line">   at com.jcabi.ssh.SSH.session(SSH.java:261)</span><br></pre></td></tr></table></figure></li></ul><h1 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h1><ul><li>jsch 에서 연동되는 .ssh/id_rsa 파일형식이 잘못되었다.</li><li>cat ~/.ssh/id_rsa 파일을 확인하면 다음과 같이 출력<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">........</span><br><span class="line">........</span><br><span class="line">........</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure></li></ul><h1 id="조치사항"><a href="#조치사항" class="headerlink" title="조치사항"></a>조치사항</h1><ul><li>ssh-keygen 으로 키을 생성할때 다음과 같은 옵셥추가<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -m PEM</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>맥에서 sshpass 이용하기</title>
      <link href="/2019/03/23/%EB%A7%A5%EC%97%90%EC%84%9C-sshpass-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
      <url>/2019/03/23/%EB%A7%A5%EC%97%90%EC%84%9C-sshpass-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<ul><li>맥에서 sshpass 을 설치하기 위해서는 콘솔창에서 다음 명령어로 설치한다.<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> mac </tag>
            
            <tag> sshpass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ambari metric collector connection timeout</title>
      <link href="/2019/03/21/Ambari-metric-collector-connection-timeout/"/>
      <url>/2019/03/21/Ambari-metric-collector-connection-timeout/</url>
      
        <content type="html"><![CDATA[<h1 id="Ambari-metric-collector-connection-timeout"><a href="#Ambari-metric-collector-connection-timeout" class="headerlink" title="Ambari metric collector connection timeout"></a>Ambari metric collector connection timeout</h1><h2 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h2><ol><li><p>Ambari 메인화면 에서 리소스 그래프가 로딩중으로 표시되고 출력이 안되었고</p></li><li><p>/var/log/ambari-server/ambari-server.log 파일을 보면 다음과 같은 에러메세지가 출력이 된다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">18 Mar 2019 22:21:50,455 ERROR [ambari-client-thread-2396] MetricsRequestHelper:115 - Error getting timeline metrics : Read timed out</span><br><span class="line">MetricsRequestHelper:122 - Cannot connect to collector: SocketTimeoutException</span><br></pre></td></tr></table></figure></li></ol><h2 id="해결방안"><a href="#해결방안" class="headerlink" title="해결방안"></a>해결방안</h2><ol><li><p>Ambari Metric Collector 서버를 재시작</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ambari-metrics-collector restart</span><br></pre></td></tr></table></figure></li><li><p>Ambari Server가 느려서 그럴수도 있다.</p><ul><li>Ambari &gt;&gt; Ambari Metrics &gt;&gt; Configs &gt;&gt; Metrics service checkpoint delay 항목을 60초에서 1800 초로 증가 시켰다.</li></ul></li><li>Ambari Metric Collector 서버의 메모리 용량을 증가 시켰다.</li><li>기존의 데이터를 지우고 다시 Ambari Metric Collector 서버를 재시작 한다.<br> a. Ambari metcic server 을 maintenance 모드로 전환시킨다.<br> b. Ambari metcic server 을 중지시킨다.<br> c. Ambari metcic server 의 config 화면에서 다음을 참고한다.<pre><code>i. &apos;Metrics Service operation mode&apos; (embedded or distributed)ii. hbase.rootdir iii. hbase.zookeeper.property.dataDir</code></pre> d. AMS 서버내부에 hbase.rootdir 내부의 파일들을 백업 및 지운다.<pre><code>- 만약 Metrics Service operation mode 가 embedded 이면 로컬에서 지우고- distributed 일경우에는 hdfs 을 이용하여 지운다</code></pre> e. ‘hbase.tmp.dir’/zookeeper 폴더안의 내용도 백업 및 지운다.<br> f. ‘hbase.tmp.dir’/phoenix-spool 폴더안의 내용도 백업 및 지운다.<br> g. AMS 재 시작 및 maintenance 모드를 헤제 한다.</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Ambari </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Error </tag>
            
            <tag> Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>freebsd 에서 게스트확장 설치하기</title>
      <link href="/2019/03/10/freebsd-%EC%97%90%EC%84%9C-%EA%B2%8C%EC%8A%A4%ED%8A%B8%ED%99%95%EC%9E%A5-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/"/>
      <url>/2019/03/10/freebsd-%EC%97%90%EC%84%9C-%EA%B2%8C%EC%8A%A4%ED%8A%B8%ED%99%95%EC%9E%A5-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-vbox-guest-additions-설치하기"><a href="#1-vbox-guest-additions-설치하기" class="headerlink" title="1. vbox guest additions 설치하기"></a>1. vbox guest additions 설치하기</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span> pkg install virtualbox-ose-additions</span><br></pre></td></tr></table></figure><h2 id="2-etc-X11-xorg-conf-파일-설정"><a href="#2-etc-X11-xorg-conf-파일-설정" class="headerlink" title="2. /etc/X11/xorg.conf 파일 설정"></a>2. /etc/X11/xorg.conf 파일 설정</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/X11/xorg.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Section &quot;Device&quot;</span><br><span class="line">Identifier &quot;Card0&quot;</span><br><span class="line">Driver &quot;vboxvideo&quot;</span><br><span class="line">VendorName &quot;InnoTek Systemberatung GmbH&quot;</span><br><span class="line">BoardName &quot;VirtualBox Graphics Adapter&quot;</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section &quot;InputDevice&quot;</span><br><span class="line">Identifier &quot;Mouse0&quot;</span><br><span class="line">Driver &quot;vboxmouse&quot;</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><h2 id="3-etc-rc-conf-파일-설정"><a href="#3-etc-rc-conf-파일-설정" class="headerlink" title="3.  /etc/rc.conf 파일 설정"></a>3.  /etc/rc.conf 파일 설정</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/rc.conf</span><br></pre></td></tr></table></figure><p>/etc/rc.conf 파일에 다음과 내용 추가<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vboxguest_enable=&quot;YES&quot;</span><br><span class="line">vboxservice_enable=&quot;YES&quot;</span><br></pre></td></tr></table></figure></p><h2 id="4-reboot-후-확인"><a href="#4-reboot-후-확인" class="headerlink" title="4. reboot 후 확인"></a>4. reboot 후 확인</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br></pre></td></tr></table></figure><img src="/2019/03/10/freebsd-에서-게스트확장-설치하기/freebsd.png" title="spaced title"><p>참고 : <a href="https://www.freebsd.org/doc/handbook/virtualization-guest-virtualbox.html" target="_blank" rel="noopener">freebsd handbook - 21.5. FreeBSD as a Guest on VirtualBox</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> freebsd </tag>
            
            <tag> vitualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>freebsd 에서 gui 환경 셋팅하기</title>
      <link href="/2019/03/10/freebsd-%EC%97%90%EC%84%9C-gui-%ED%99%98%EA%B2%BD-%EC%85%8B%ED%8C%85%ED%95%98%EA%B8%B0/"/>
      <url>/2019/03/10/freebsd-%EC%97%90%EC%84%9C-gui-%ED%99%98%EA%B2%BD-%EC%85%8B%ED%8C%85%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="freebsd-에서-gui-환경-셋팅하기-그놈설치"><a href="#freebsd-에서-gui-환경-셋팅하기-그놈설치" class="headerlink" title="freebsd 에서 gui 환경 셋팅하기 (그놈설치)"></a>freebsd 에서 gui 환경 셋팅하기 (그놈설치)</h1><h2 id="1-install-gnome3"><a href="#1-install-gnome3" class="headerlink" title="1. install gnome3"></a>1. install gnome3</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pkg install gnome3</span><br></pre></td></tr></table></figure><h2 id="2-fstab-파일-설정"><a href="#2-fstab-파일-설정" class="headerlink" title="2. fstab 파일 설정"></a>2. fstab 파일 설정</h2><p>/etc/fstab 파일에 내용추가<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proc           /proc       procfs  rw  0   0</span><br></pre></td></tr></table></figure></p><h2 id="3-rc-conf-파일설정"><a href="#3-rc-conf-파일설정" class="headerlink" title="3. rc.conf 파일설정"></a>3. rc.conf 파일설정</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dbus_enable=&quot;YES&quot;</span><br><span class="line">hald_enable=&quot;YES&quot;</span><br><span class="line">gdm_enable=&quot;YES&quot;</span><br><span class="line">gnome_enable=&quot;YES&quot;</span><br></pre></td></tr></table></figure><h2 id="4-재부팅후-확인"><a href="#4-재부팅후-확인" class="headerlink" title="4. 재부팅후 확인"></a>4. 재부팅후 확인</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br></pre></td></tr></table></figure><img src="/2019/03/10/freebsd-에서-gui-환경-셋팅하기/freebsd.png" title="spaced title"><p>참고 : <a href="https://www.freebsd.org/doc/handbook/x11-wm.html" target="_blank" rel="noopener">freebsd handbook - 5.7. Desktop Environments</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> freebsd </tag>
            
            <tag> gnome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 에서 html 문서 계시하기</title>
      <link href="/2019/03/10/hexo-%EC%97%90%EC%84%9C-html-%EB%AC%B8%EC%84%9C-%EA%B3%84%EC%8B%9C%ED%95%98%EA%B8%B0/"/>
      <url>/2019/03/10/hexo-%EC%97%90%EC%84%9C-html-%EB%AC%B8%EC%84%9C-%EA%B3%84%EC%8B%9C%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-에서-html-문서-계시하기"><a href="#hexo-에서-html-문서-계시하기" class="headerlink" title="hexo 에서 html 문서 계시하기"></a>hexo 에서 html 문서 계시하기</h1><p>hexo 에서 마크다운형식으로 페이지를 만들지만 가끔씩 마크다운 문서가 아닌 html 문서로 계시해야 할 경우가 발생한다. 그럴경우 html 문서 상단에 다음과 같은 태그를 추가한다.</p><figure class="highlight markdown hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: ppts</span><br><span class="line">date: 2019-02-17 20:08:57</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>하지만 css, js 파일은 인식이 안되어서 cdn 을 통하여 직접 임포트를 해야하는것 같다.</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu 에서 Netflix 시청하기</title>
      <link href="/2019/03/10/ubuntu-%EC%97%90%EC%84%9C-Netflix-%EC%8B%9C%EC%B2%AD%ED%95%98%EA%B8%B0/"/>
      <url>/2019/03/10/ubuntu-%EC%97%90%EC%84%9C-Netflix-%EC%8B%9C%EC%B2%AD%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu-에서-Netflix-시청하기"><a href="#ubuntu-에서-Netflix-시청하기" class="headerlink" title="ubuntu 에서 Netflix 시청하기"></a>ubuntu 에서 Netflix 시청하기</h1><p>우분투에서 넷플릭스을 시청시 다음과 화면이 나오면서 재생이 안되는 경우가 발생한다.</p><img src="/2019/03/10/ubuntu-에서-Netflix-시청하기/error.png" title="spaced title"><p>이럴경우 다음과 같이 조치한다</p><h2 id="1-Firefox-에서-DRM-설정하기"><a href="#1-Firefox-에서-DRM-설정하기" class="headerlink" title="1. Firefox 에서 DRM 설정하기"></a>1. Firefox 에서 DRM 설정하기</h2><p>Firefox 에서 DRM 제어 콘텐츠 재생 체크하기</p><img src="/2019/03/10/ubuntu-에서-Netflix-시청하기/firefox.png" title="spaced title"><h2 id="2-extra-codecs-설치하기"><a href="#2-extra-codecs-설치하기" class="headerlink" title="2. extra codecs 설치하기"></a>2. extra codecs 설치하기</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install libavcodec-extra</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> Netflix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip cannot import name main 에러날때</title>
      <link href="/2019/03/09/ubuntu-%EC%97%90%EC%84%9C-pip3-%EA%B0%80-pip-cannot-import-name-main-%EC%97%90%EB%9F%AC%EB%82%A0%EB%95%8C/"/>
      <url>/2019/03/09/ubuntu-%EC%97%90%EC%84%9C-pip3-%EA%B0%80-pip-cannot-import-name-main-%EC%97%90%EB%9F%AC%EB%82%A0%EB%95%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="pip-install-실행간-ImportError-cannot-import-name-‘main’-에러발생"><a href="#pip-install-실행간-ImportError-cannot-import-name-‘main’-에러발생" class="headerlink" title="pip install 실행간 ImportError: cannot import name ‘main’ 에러발생"></a>pip install 실행간 ImportError: cannot import name ‘main’ 에러발생</h1><h2 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h2><p>ubuntu 에서 apt install python-pip 인스톨후에 sudo pip install pip –upgrade 함</p><h2 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h2><p>pip 실행간 다음과 같은 에러발생<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">guru@guru-notebook:~$ pip3 install numpy</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/bin/pip3&quot;, line 9, in &lt;module&gt;</span><br><span class="line">    from pip import main</span><br><span class="line">ImportError: cannot import name &apos;main&apos;</span><br></pre></td></tr></table></figure></p><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>다음 명령어를 실행 (참고 : <a href="https://stackoverflow.com/questions/49836676/error-after-upgrading-pip-cannot-import-name-main" target="_blank" rel="noopener">Error after upgrading pip: cannot import name ‘main’</a>)<br><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo python3 -m pip uninstall pip &amp;&amp; sudo apt install python3-pip --reinstall</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> ubuntu </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu jupyter-notekook 설치</title>
      <link href="/2019/03/09/ubuntu-jupyter-notekook-%EC%84%A4%EC%B9%98/"/>
      <url>/2019/03/09/ubuntu-jupyter-notekook-%EC%84%A4%EC%B9%98/</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu-jupyter-notebook-python3-설치"><a href="#ubuntu-jupyter-notebook-python3-설치" class="headerlink" title="ubuntu jupyter notebook (python3) 설치"></a>ubuntu jupyter notebook (python3) 설치</h1><h2 id="1-python3-install"><a href="#1-python3-install" class="headerlink" title="1. python3 install"></a>1. python3 install</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash">sudo apt install python3</span></span><br></pre></td></tr></table></figure><h2 id="2-pip3-install"><a href="#2-pip3-install" class="headerlink" title="2. pip3 install"></a>2. pip3 install</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash">sudo apt install python3-pip</span></span><br></pre></td></tr></table></figure><h2 id="3-ipython3-install"><a href="#3-ipython3-install" class="headerlink" title="3. ipython3 install"></a>3. ipython3 install</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ipython3</span><br></pre></td></tr></table></figure><h2 id="4-jupyter-notebook-install"><a href="#4-jupyter-notebook-install" class="headerlink" title="4. jupyter-notebook install"></a>4. jupyter-notebook install</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install jupyter-notebook</span><br></pre></td></tr></table></figure><h2 id="5-start-jupyter-notebook"><a href="#5-start-jupyter-notebook" class="headerlink" title="5. start jupyter-notebook"></a>5. start jupyter-notebook</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-notebook</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> ubuntu </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PlayOnLinux is unable to find 32bits OpenGL libraries</title>
      <link href="/2019/03/06/PlayOnLinux-is-unable-to-find-32bits-OpenGL-libraries/"/>
      <url>/2019/03/06/PlayOnLinux-is-unable-to-find-32bits-OpenGL-libraries/</url>
      
        <content type="html"><![CDATA[<h1 id="PlayOnLinux-실행시-‘PlayOnLinux-is-unable-to-find-32bits-OpenGL-libraries’-메세지-발생"><a href="#PlayOnLinux-실행시-‘PlayOnLinux-is-unable-to-find-32bits-OpenGL-libraries’-메세지-발생" class="headerlink" title="PlayOnLinux 실행시 ‘PlayOnLinux is unable to find 32bits OpenGL libraries’ 메세지 발생"></a>PlayOnLinux 실행시 ‘PlayOnLinux is unable to find 32bits OpenGL libraries’ 메세지 발생</h1><h2 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h2><ul><li>PlayOnLinux 실행시 다음과 같은 메세지가 출력이 된다.<img src="/2019/03/06/PlayOnLinux-is-unable-to-find-32bits-OpenGL-libraries/error.png" title="spaced title"></li></ul><h2 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h2><ul><li>sudo apt autoremove 을 실행하여 32bits OpenGL libraries 가 삭제 (의존성문제)</li></ul><h2 id="해결방안"><a href="#해결방안" class="headerlink" title="해결방안"></a>해결방안</h2><ol><li><p>저장소 추가</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --add-architecture i386</span><br></pre></td></tr></table></figure></li><li><p>기존에 설치된 라이브러리 제거</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge fglrx*</span><br></pre></td></tr></table></figure></li><li><p>xorg.conf 제거</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /etc/X11/xorg.conf</span><br></pre></td></tr></table></figure></li><li><p>패키지 재설치</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --reinstall xserver-xorg-core libgl1-mesa-glx:i386 libgl1-mesa-dri:i386 libgl1-mesa-glx:amd64 libgl1-mesa-dri:amd64</span><br></pre></td></tr></table></figure></li><li><p>xorg 재설정</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure xserver-xorg</span><br></pre></td></tr></table></figure></li><li><p>재부팅</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker remote port open (docker 원격 API 활성화)</title>
      <link href="/2019/02/24/docker-remote-port-open-docker-%EC%9B%90%EA%B2%A9-API-%ED%99%9C%EC%84%B1%ED%99%94/"/>
      <url>/2019/02/24/docker-remote-port-open-docker-%EC%9B%90%EA%B2%A9-API-%ED%99%9C%EC%84%B1%ED%99%94/</url>
      
        <content type="html"><![CDATA[<p>경고 : Docker 에서 remote port open 할 경우 별도의 인증절차 없이 restful api 을 사용하므로<br>보안에 취약합니다. 해당 작업으로 발생하는 사항은 권장하지 않으며 발생한 사항에 대하여 책임지지 않습니다.</p><p><a href="http://blog.brian.jp/docker,/docker/swarm,/netsec/2017/10/31/free-servers-with-docker-swarm.html" target="_blank" rel="noopener">http://blog.brian.jp/docker,/docker/swarm,/netsec/2017/10/31/free-servers-with-docker-swarm.html</a></p><h1 id="docker-remote-port-open-docker-원격-API-활성화"><a href="#docker-remote-port-open-docker-원격-API-활성화" class="headerlink" title="docker remote port open (docker 원격 API 활성화)"></a>docker remote port open (docker 원격 API 활성화)</h1><h2 id="1-lib-systemd-system-docker-service-내용-수정"><a href="#1-lib-systemd-system-docker-service-내용-수정" class="headerlink" title="1. /lib/systemd/system/docker.service 내용 수정"></a>1. /lib/systemd/system/docker.service 내용 수정</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/default/docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// $DOCKER_OPTS</span><br></pre></td></tr></table></figure><h2 id="2-etc-default-docker-내용-수정"><a href="#2-etc-default-docker-내용-수정" class="headerlink" title="2. /etc/default/docker 내용 수정"></a>2. /etc/default/docker 내용 수정</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=&quot;--dns 8.8.8.8 --dns 8.8.4.4 -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock&quot;</span><br></pre></td></tr></table></figure><h2 id="3-docker-리로드-및-재시작"><a href="#3-docker-리로드-및-재시작" class="headerlink" title="3. docker 리로드 및 재시작"></a>3. docker 리로드 및 재시작</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure><h2 id="4-테스트"><a href="#4-테스트" class="headerlink" title="4. 테스트"></a>4. 테스트</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:2375/version</span><br><span class="line"></span><br><span class="line">&#123;"Platform":&#123;"Name":"Docker Engine - Community"&#125;,"Components":[&#123;"Name":"Engine","Version":"18.09.2","Details":&#123;"ApiVersion":"1.39","Arch":"amd64","BuildTime":"2019-02-10T03:42:13.000000000+00:00","Experimental":"false","GitCommit":"6247962","GoVersion":"go1.10.6","KernelVersion":"4.15.0-45-generic","MinAPIVersion":"1.12","Os":"linux"&#125;&#125;],"Version":"18.09.2","ApiVersion":"1.39","MinAPIVersion":"1.12","GitCommit":"6247962","GoVersion":"go1.10.6","Os":"linux","Arch":"amd64","KernelVersion":"4.15.0-45-generic","BuildTime":"2019-02-10T03:42:13.000000000+00:00"&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker, server, linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack devserver proxy 설정법</title>
      <link href="/2019/02/24/webpack-devserver-proxy-%EC%84%A4%EC%A0%95%EB%B2%95/"/>
      <url>/2019/02/24/webpack-devserver-proxy-%EC%84%A4%EC%A0%95%EB%B2%95/</url>
      
        <content type="html"><![CDATA[<h1 id="webpack-devserver-proxy-설정법"><a href="#webpack-devserver-proxy-설정법" class="headerlink" title="webpack devserver proxy 설정법"></a>webpack devserver proxy 설정법</h1><p>package.json 파일에서 “proxy”: “<a href="http://localhost" target="_blank" rel="noopener">http://localhost</a>:<port-goes-here>” 설정한다</port-goes-here></p><p>package.json 예시</p><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"client"</span>,</span><br><span class="line">  <span class="hljs-attr">"version"</span>: <span class="hljs-string">"0.1.0"</span>,</span><br><span class="line">  <span class="hljs-attr">"private"</span>: <span class="hljs-literal">true</span>,</span><br><span class="line">  <span class="hljs-attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="hljs-attr">"react"</span>: <span class="hljs-string">"^16.3.2"</span>,</span><br><span class="line">    <span class="hljs-attr">"react-dom"</span>: <span class="hljs-string">"^16.3.2"</span>,</span><br><span class="line">    <span class="hljs-attr">"react-scripts"</span>: <span class="hljs-string">"1.1.4"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="hljs-attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="hljs-attr">"start"</span>: <span class="hljs-string">"react-scripts start"</span>,</span><br><span class="line">    <span class="hljs-attr">"build"</span>: <span class="hljs-string">"react-scripts build"</span>,</span><br><span class="line">    <span class="hljs-attr">"test"</span>: <span class="hljs-string">"react-scripts test --env=jsdom"</span>,</span><br><span class="line">    <span class="hljs-attr">"eject"</span>: <span class="hljs-string">"react-scripts eject"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="hljs-attr">"proxy"</span>: <span class="hljs-string">"http://localhost:&lt;PORT-GOES-HERE&gt;"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> javascript </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hbase RegionServer 가 시간마다 셧다운될때</title>
      <link href="/2019/02/24/Hbase-RegionServer-%EA%B0%80-%EC%8B%9C%EA%B0%84%EB%A7%88%EB%8B%A4-%EC%85%A7%EB%8B%A4%EC%9A%B4%EB%90%A0%EB%95%8C/"/>
      <url>/2019/02/24/Hbase-RegionServer-%EA%B0%80-%EC%8B%9C%EA%B0%84%EB%A7%88%EB%8B%A4-%EC%85%A7%EB%8B%A4%EC%9A%B4%EB%90%A0%EB%95%8C/</url>
      
        <content type="html"><![CDATA[<p>참고 : <a href="https://superuser.blog/hbase-dead-regionserver/" target="_blank" rel="noopener">https://superuser.blog/hbase-dead-regionserver/</a></p><h3 id="원인-시간-동기화-문제"><a href="#원인-시간-동기화-문제" class="headerlink" title="원인 : 시간 동기화 문제"></a>원인 : 시간 동기화 문제</h3><p>로그에 다음과같은 에러 메세지 출력</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018-02-06 22:17:06,598 INFO  [regionserver/node04/192.168.1.194:16020] regionserver.HRegionServer: STOPPED: Unhandled: org.apache.hadoop.hbase.ClockOutOfSyncException: Server node04,16020,1517973362638 has been rejected; Reported time is too far out of sync with master.  Time difference of 37329ms &gt; max allowed of 30000ms</span><br></pre></td></tr></table></figure><h3 id="각-노드마다-시간-동기화-필요"><a href="#각-노드마다-시간-동기화-필요" class="headerlink" title="각 노드마다 시간 동기화 필요"></a>각 노드마다 시간 동기화 필요</h3>]]></content>
      
      
      
        <tags>
            
            <tag> hadoop, server, linux, hbase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AMBARI METRICS COLLECTOR 이동법</title>
      <link href="/2019/02/24/AMBARI-METRICS-COLLECTOR-%EC%9D%B4%EB%8F%99%EB%B2%95/"/>
      <url>/2019/02/24/AMBARI-METRICS-COLLECTOR-%EC%9D%B4%EB%8F%99%EB%B2%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-기존에-설치된-METRICS-COLLECTOR-제거"><a href="#1-기존에-설치된-METRICS-COLLECTOR-제거" class="headerlink" title="1. 기존에 설치된 METRICS_COLLECTOR 제거"></a>1. 기존에 설치된 METRICS_COLLECTOR 제거</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:admin -H "X-Requested-By:ambari" - i -X DELETE http://192.168.1.191:8080/api/v1/clusters/supercom_test/hosts/node04/host_components/METRICS_COLLECTOR</span><br></pre></td></tr></table></figure><h1 id="2-새로운-호스트에-METRICS-COLLECTOR-설치"><a href="#2-새로운-호스트에-METRICS-COLLECTOR-설치" class="headerlink" title="2. 새로운 호스트에 METRICS_COLLECTOR 설치"></a>2. 새로운 호스트에 METRICS_COLLECTOR 설치</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:admin -H "X-Requested-By:ambari" -i -X POST http://192.168.1.191:8080/api/v1/clusters/supercom_test/hosts/node02/host_components/METRICS_COLLECTOR</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ambari, hadoop, server, linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yarn 캐쉬 지우기</title>
      <link href="/2019/02/24/yarn-%EC%BA%90%EC%89%AC-%EC%A7%80%EC%9A%B0%EA%B8%B0/"/>
      <url>/2019/02/24/yarn-%EC%BA%90%EC%89%AC-%EC%A7%80%EC%9A%B0%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<p>가끔 맵리듀스 작업을 하다보면, yarn 에 캐쉬가 많이 남아 있어서 충돌이 발생하는 경우가 발생한다. <br><br>초기화을 하자</p><h1 id="yarn-cache-저장위치-확인하기"><a href="#yarn-cache-저장위치-확인하기" class="headerlink" title="yarn cache 저장위치 확인하기"></a>yarn cache 저장위치 확인하기</h1><p>yarn-site.xml 파일에 yarn.nodemanager.local-dirs 위치 확인하기  </p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span>       </span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.local-dirs<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span>       </span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/hadoop/yarn/local<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="해당-폴더의-내용-지우기"><a href="#해당-폴더의-내용-지우기" class="headerlink" title="해당 폴더의 내용 지우기"></a>해당 폴더의 내용 지우기</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[yarn@node2 ~]$ cd /hadoop/yarn/local/</span><br><span class="line">[yarn@node2 local]$ ls filecache  nmPrivate  spark_shuffle  usercache</span><br><span class="line">[yarn@node2 local]$ rm -rf filecache/ usercache/</span><br></pre></td></tr></table></figure><h1 id="yarn-재시작"><a href="#yarn-재시작" class="headerlink" title="yarn 재시작"></a>yarn 재시작</h1>]]></content>
      
      
      
        <tags>
            
            <tag> server, linux, hadoop, hadoop-yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>우분투 18.04 최대절전모드 활성화</title>
      <link href="/2019/02/24/%EC%9A%B0%EB%B6%84%ED%88%AC-18-04-%EC%B5%9C%EB%8C%80%EC%A0%88%EC%A0%84%EB%AA%A8%EB%93%9C-%ED%99%9C%EC%84%B1%ED%99%94/"/>
      <url>/2019/02/24/%EC%9A%B0%EB%B6%84%ED%88%AC-18-04-%EC%B5%9C%EB%8C%80%EC%A0%88%EC%A0%84%EB%AA%A8%EB%93%9C-%ED%99%9C%EC%84%B1%ED%99%94/</url>
      
        <content type="html"><![CDATA[<h1 id="최대절전모드-확인"><a href="#최대절전모드-확인" class="headerlink" title="최대절전모드 확인"></a>최대절전모드 확인</h1><ol><li>터미널 창에서 다음 명령어로 최대절전모드가 작동이 되는지 확인</li></ol><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl hibernate</span><br></pre></td></tr></table></figure><h1 id="그놈메뉴에-최대절전모드-활성화-하기"><a href="#그놈메뉴에-최대절전모드-활성화-하기" class="headerlink" title="그놈메뉴에 최대절전모드 활성화 하기"></a>그놈메뉴에 최대절전모드 활성화 하기</h1><ol><li>터미널창에 다음 명령어를 입력하여 환경설정 파일 열기</li></ol><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/polkit-1/localauthority/50-local.d/com.ubuntu.enable-hibernate.pkla</span><br></pre></td></tr></table></figure><img src="/2019/02/24/우분투-18-04-최대절전모드-활성화/systemctl-hibernate-600x84.jpg" title="spaced title"><ol start="2"><li>파일에 다음과 같은 내용을 입력</li></ol><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Re-enable hibernate by default in upower]</span><br><span class="line">Identity=unix-user:*</span><br><span class="line">Action=org.freedesktop.upower.hibernate</span><br><span class="line">ResultActive=yes</span><br><span class="line"></span><br><span class="line">[Re-enable hibernate by default in logind]</span><br><span class="line">Identity=unix-user:*</span><br><span class="line">Action=org.freedesktop.login1.hibernate;org.freedesktop.login1.handle-hibernate-key;org.freedesktop.login1;org.freedesktop.login1.hibernate-multiple-sessions;org.freedesktop.login1.hibernate-ignore-inhibit</span><br><span class="line">ResultActive=yes</span><br></pre></td></tr></table></figure><img src="/2019/02/24/우분투-18-04-최대절전모드-활성화/enable-hibernate-600x247.jpg" title="spaced title"><ol start="3"><li>시스템 재시작 및 그놈 확장 설치 : <a href="https://extensions.gnome.org/extension/755/hibernate-status-button/" target="_blank" rel="noopener">Hibernate Status Button.</a><img src="/2019/02/24/우분투-18-04-최대절전모드-활성화/hibernate-status-button-600x325.jpg" title="spaced title"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu, linux, server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot 을 influxDB 와 연동하기</title>
      <link href="/2019/02/10/spring-boot-%EC%9D%84-influxDB-%EC%99%80-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/"/>
      <url>/2019/02/10/spring-boot-%EC%9D%84-influxDB-%EC%99%80-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="요구사항"><a href="#요구사항" class="headerlink" title="요구사항"></a>요구사항</h1><ul><li>spring boot : 1.5.10.RELEASE 이상</li><li>jdk : 1.8 이상</li><li>influxDB : 2.7</li></ul><h1 id="influxDB-설치"><a href="#influxDB-설치" class="headerlink" title="influxDB 설치"></a>influxDB 설치</h1><ul><li>docker 에서 설치<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull influxdb</span><br><span class="line">docker run --name  influxdb-test -p8086:8086 -d influxdb</span><br></pre></td></tr></table></figure></li></ul><h1 id="샘플-데이터-생성하기"><a href="#샘플-데이터-생성하기" class="headerlink" title="샘플 데이터 생성하기"></a>샘플 데이터 생성하기</h1><ul><li><p>influxDB 접속</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it influxdb-test /bin/bash</span><br><span class="line">influx -precision rfc3339</span><br><span class="line">Connected to http://localhost:8086 version 1.4.x</span><br><span class="line">InfluxDB shell 1.4.x</span><br></pre></td></tr></table></figure></li><li><p>데이터베이스 생성</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE NOAA_water_database</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>샘플 데이터 다운받기</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://s3.amazonaws.com/noaa.water-database/NOAA_data.txt -o NOAA_data.txt</span><br></pre></td></tr></table></figure></li><li><p>데이터를 influxDB 에 import 하기</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">influx -import -path=NOAA_data.txt -precision=s -database=NOAA_water_database</span><br></pre></td></tr></table></figure></li><li><p>테스트 하기</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">influx -precision rfc3339</span><br><span class="line">use NOAA_water_database</span><br><span class="line">SELECT * FROM h2o_feet LIMIT 5</span><br></pre></td></tr></table></figure></li></ul><h1 id="spring-boot-에-연동하기"><a href="#spring-boot-에-연동하기" class="headerlink" title="spring boot 에 연동하기"></a>spring boot 에 연동하기</h1><ul><li>spring boot 프로젝트 생성</li><li><p>pom.xml 설정</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0"</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>influxDB-Test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0.5.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.influxdb<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>influxdb-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.14<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.miwurster<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-data-influxdb<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line">                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>spring configure 설정 (InfluxDBConfiguration.java)</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@Configuration</span></span><br><span class="line"><span class="hljs-meta">@EnableConfigurationProperties</span>(InfluxDBProperties.class)</span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">InfluxDBConfiguration</span></span></span><br><span class="line"><span class="hljs-class"></span>&#123;</span><br><span class="line">  <span class="hljs-meta">@Bean</span></span><br><span class="line">  <span class="hljs-function"><span class="hljs-keyword">public</span> InfluxDBConnectionFactory <span class="hljs-title">connectionFactory</span><span class="hljs-params">(<span class="hljs-keyword">final</span> InfluxDBProperties properties)</span></span></span><br><span class="line"><span class="hljs-function">  </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> InfluxDBConnectionFactory(properties);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-meta">@Bean</span></span><br><span class="line">  <span class="hljs-function"><span class="hljs-keyword">public</span> InfluxDBTemplate&lt;Point&gt; <span class="hljs-title">influxDBTemplate</span><span class="hljs-params">(<span class="hljs-keyword">final</span> InfluxDBConnectionFactory connectionFactory)</span></span></span><br><span class="line"><span class="hljs-function">  </span>&#123;</span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * You can use your own 'PointCollectionConverter' implementation, e.g. in case</span></span><br><span class="line"><span class="hljs-comment">     * you want to use your own custom measurement object.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> InfluxDBTemplate&lt;&gt;(connectionFactory, <span class="hljs-keyword">new</span> PointConverter());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-meta">@Bean</span></span><br><span class="line">  <span class="hljs-function"><span class="hljs-keyword">public</span> DefaultInfluxDBTemplate <span class="hljs-title">defaultTemplate</span><span class="hljs-params">(<span class="hljs-keyword">final</span> InfluxDBConnectionFactory connectionFactory)</span></span></span><br><span class="line"><span class="hljs-function">  </span>&#123;</span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * If you are just dealing with Point objects from 'influxdb-java' you could</span></span><br><span class="line"><span class="hljs-comment">     * also use an instance of class DefaultInfluxDBTemplate.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> DefaultInfluxDBTemplate(connectionFactory);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>application.properties 설정</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.influxdb.url=http://localhost:8086</span><br><span class="line">spring.influxdb.database=NOAA_water_database</span><br><span class="line">spring.influxdb.username=~</span><br><span class="line">spring.influxdb.retentionPolicy=autogen</span><br></pre></td></tr></table></figure></li><li><p>DTO 생성(H2oFeet.java)</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@Measurement</span>(name = <span class="hljs-string">"h2o_feet"</span>)</span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H2oFeet</span> </span>&#123;</span><br><span class="line"><span class="hljs-meta">@Column</span>(name = <span class="hljs-string">"water_level"</span>)</span><br><span class="line"><span class="hljs-keyword">private</span> Double water_level;</span><br><span class="line"><span class="hljs-meta">@Column</span>(name = <span class="hljs-string">"level description"</span>)</span><br><span class="line"><span class="hljs-keyword">private</span> String level_description;</span><br><span class="line"><span class="hljs-meta">@Column</span>(name = <span class="hljs-string">"location"</span>)</span><br><span class="line"><span class="hljs-keyword">private</span> String location;</span><br><span class="line"><span class="hljs-meta">@Column</span>(name = <span class="hljs-string">"time"</span>)</span><br><span class="line"><span class="hljs-keyword">private</span> Instant time;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> Double <span class="hljs-title">getWater_level</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> water_level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setWater_level</span><span class="hljs-params">(Double water_level)</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">this</span>.water_level = water_level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getLevel_description</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> level_description;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setLevel_description</span><span class="hljs-params">(String level_description)</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">this</span>.level_description = level_description;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getLocation</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> location;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setLocation</span><span class="hljs-params">(String location)</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">this</span>.location = location;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> Instant <span class="hljs-title">getTime</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> time;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setTime</span><span class="hljs-params">(Instant time)</span> </span>&#123;</span><br><span class="line"><span class="hljs-keyword">this</span>.time = time;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>controller 생성 (MainController.java)</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@Controller</span></span><br><span class="line"><span class="hljs-meta">@RequestMapping</span>(path=<span class="hljs-string">"/api/v1/NOAAWater"</span>)</span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">@Autowired</span></span><br><span class="line"><span class="hljs-keyword">private</span> MainService mainService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">@GetMapping</span>(path=<span class="hljs-string">"/h2os"</span>)</span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-meta">@ResponseBody</span> <span class="hljs-function">List&lt;H2oFeet&gt; <span class="hljs-title">h2o_list</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">return</span> mainService.h2o_list();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>service 생성 (MainService.java)</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">@Service</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">@Autowired</span></span><br><span class="line"><span class="hljs-keyword">private</span> InfluxDBTemplate&lt;Point&gt; influxDBTemplate;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;H2oFeet&gt; <span class="hljs-title">h2o_list</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">Query query = QueryBuilder.newQuery(<span class="hljs-string">"SELECT * FROM h2o_feet LIMIT 1000"</span>)</span><br><span class="line">        .forDatabase(<span class="hljs-string">"NOAA_water_database"</span>)</span><br><span class="line">        .create();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">QueryResult queryResult = influxDBTemplate.query(query);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">InfluxDBResultMapper resultMapper = <span class="hljs-keyword">new</span> InfluxDBResultMapper(); <span class="hljs-comment">// thread-safe - can be reused</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">return</span> resultMapper.toPOJO(queryResult, H2oFeet.class);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h1><ul><li>curl<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash">curl -X GET http://localhost:8080/api/v1/NOAAWater/h2os</span></span><br></pre></td></tr></table></figure></li></ul><p>github : <a href="https://github.com/gadian88/influxDB-Test" target="_blank" rel="noopener">https://github.com/gadian88/influxDB-Test</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
            <tag> spring boot </tag>
            
            <tag> influxDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vagrant box 저장위치 설정</title>
      <link href="/2019/01/11/vagrant-box-%EC%A0%80%EC%9E%A5%EC%9C%84%EC%B9%98-%EC%84%A4%EC%A0%95/"/>
      <url>/2019/01/11/vagrant-box-%EC%A0%80%EC%9E%A5%EC%9C%84%EC%B9%98-%EC%84%A4%EC%A0%95/</url>
      
        <content type="html"><![CDATA[<p>.bashrc 파일에 다음과 같이 설정<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export VAGRANT_HOME=/media/master/vagrant</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot - jar로 서비스 등록하기</title>
      <link href="/2018/12/27/Spring-Boot-jar%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/"/>
      <url>/2018/12/27/Spring-Boot-jar%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<p>참고: <a href="http://heowc.tistory.com/38" target="_blank" rel="noopener">Spring Boot - jar로 Deploy(배포)하기 [허원철의 개발 블로그]</a></p><big> 서비스 등록 </big><ol><li>서비스 등록<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/init.d/myApp</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span>!/bin/sh</span><br><span class="line">SERVICE_NAME=myApp</span><br><span class="line">PATH_TO_JAR=/usr/local/myApp.jar</span><br><span class="line">PID_PATH_NAME=/tmp/myApp-pid</span><br><span class="line">case $1 in</span><br><span class="line">    start)</span><br><span class="line">        echo "Starting $SERVICE_NAME ..."</span><br><span class="line">        if [ ! -f $PID_PATH_NAME ]; then</span><br><span class="line">            nohup java -jar $PATH_TO_JAR /tmp 2&gt;&gt; /dev/null &gt;&gt; /dev/null &amp;</span><br><span class="line">                        echo $! &gt; $PID_PATH_NAME</span><br><span class="line">            echo "$SERVICE_NAME started ..."</span><br><span class="line">        else</span><br><span class="line">            echo "$SERVICE_NAME is already running ..."</span><br><span class="line">        fi</span><br><span class="line">    ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ -f $PID_PATH_NAME ]; then</span><br><span class="line">            PID=$(cat $PID_PATH_NAME);</span><br><span class="line">            echo "$SERVICE_NAME stoping ..."</span><br><span class="line">            kill $PID;</span><br><span class="line">            echo "$SERVICE_NAME stopped ..."</span><br><span class="line">            rm $PID_PATH_NAME</span><br><span class="line">        else</span><br><span class="line">            echo "$SERVICE_NAME is not running ..."</span><br><span class="line">        fi</span><br><span class="line">    ;;</span><br><span class="line">    restart)</span><br><span class="line">        if [ -f $PID_PATH_NAME ]; then</span><br><span class="line">            PID=$(cat $PID_PATH_NAME);</span><br><span class="line">            echo "$SERVICE_NAME stopping ...";</span><br><span class="line">            kill $PID;</span><br><span class="line">            echo "$SERVICE_NAME stopped ...";</span><br><span class="line">            rm $PID_PATH_NAME</span><br><span class="line">            echo "$SERVICE_NAME starting ..."</span><br><span class="line">            nohup java $JAVA_OPTS -jar $PATH_TO_JAR /tmp 2&gt;&gt; /dev/null &gt;&gt; /dev/null &amp;</span><br><span class="line">                        echo $! &gt; $PID_PATH_NAME</span><br><span class="line">            echo "$SERVICE_NAME started ..."</span><br><span class="line">        else</span><br><span class="line">            echo "$SERVICE_NAME is not running ..."</span><br><span class="line">        fi</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><ul><li><p>서비스 실행</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service myapp start | stop | restart</span><br></pre></td></tr></table></figure><big> * spring boot 1.3부터는 별도의 스크립트 없이도 간단한 설정으로 자체적으로 실행이 가능함</big><ul><li>Maven<figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">executable</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">executable</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Gradle</p><figure class="highlight groovy hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bootJar &#123;</span><br><span class="line">launchScript()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>서비스 등록</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /var/myapp/myapp.jar /etc/init.d/myapp</span><br></pre></td></tr></table></figure></li><li><p>서비스 실행</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service myapp start</span><br></pre></td></tr></table></figure><p>참고 : <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/deployment-install.html" target="_blank" rel="noopener">Installing Spring Boot Applications</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker service log 보기</title>
      <link href="/2018/12/27/docker-service-log-%EB%B3%B4%EA%B8%B0/"/>
      <url>/2018/12/27/docker-service-log-%EB%B3%B4%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u docker.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! 해결하기</title>
      <link href="/2018/12/27/WARNING-REMOTE-HOST-IDENTIFICATION-HAS-CHANGED-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/"/>
      <url>/2018/12/27/WARNING-REMOTE-HOST-IDENTIFICATION-HAS-CHANGED-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[user@hostname ~]$ ssh root@pong</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class="line">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span><br><span class="line">It is also possible that a host key has just been changed.</span><br><span class="line">The fingerprint for the RSA key sent by the remote host is</span><br><span class="line">6e:45:f9:a8:af:38:3d:a1:a5:c7:76:1d:02:f8:77:00.</span><br><span class="line">Please contact your system administrator.</span><br><span class="line">Add correct host key in /home/hostname /.ssh/known_hosts to get rid of this message.</span><br><span class="line">Offending RSA key in /var/lib/sss/pubconf/known_hosts:4</span><br><span class="line">RSA host key for pong has changed and you have requested strict checking.</span><br><span class="line">Host key verification failed.</span><br></pre></td></tr></table></figure><h1 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h1><p>known_hosts 파일에 저장되어 있는 정보하고 접속하려는 호스트와의 fingerprint 불일치</p><h1 id="조치"><a href="#조치" class="headerlink" title="조치"></a>조치</h1><p>다음 명령어를 실행<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R &lt;host&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo tags 페이지 생성</title>
      <link href="/2018/12/27/hexo-tags-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%83%9D%EC%84%B1/"/>
      <url>/2018/12/27/hexo-tags-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%83%9D%EC%84%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="새로운-페이지-생성"><a href="#새로운-페이지-생성" class="headerlink" title="새로운 페이지 생성"></a>새로운 페이지 생성</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page "tags"</span><br></pre></td></tr></table></figure><h1 id="source-tags-index-md-header-수정"><a href="#source-tags-index-md-header-수정" class="headerlink" title="source/tags/index.md header 수정"></a>source/tags/index.md header 수정</h1><figure class="highlight markdown hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tags</span><br><span class="line">date: 2018-12-27 00:55:17</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm build 간 javascript heap out of memory npm build 발생시</title>
      <link href="/2018/12/27/npm-build-%EA%B0%84-javascript-heap-out-of-memory-npm-build-%EB%B0%9C%EC%83%9D%EC%8B%9C/"/>
      <url>/2018/12/27/npm-build-%EA%B0%84-javascript-heap-out-of-memory-npm-build-%EB%B0%9C%EC%83%9D%EC%8B%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h1><p>npm run build 후 다음과 같은 에러 메세지 발생<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory</span><br></pre></td></tr></table></figure></p><h1 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h1><p>이는 기본 Node.js 가용 메모리가 빌드하기에 충분하지 않아 발생하는 오류</p><h1 id="조치"><a href="#조치" class="headerlink" title="조치"></a>조치</h1><p>package.json 내부의 build 항목을 다음과 같이 수정</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  ...</span><br><span class="line">    "build": "node --max_old_space_size=8096 scripts/build.js",</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> react.js </tag>
            
            <tag> front-end </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ambari Agent가 실행되고도 Ambari 에서는 heartbeat lost가 발생할경우</title>
      <link href="/2018/12/20/Ambari-Agent%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EA%B3%A0%EB%8F%84-Ambari-%EC%97%90%EC%84%9C%EB%8A%94-heartbeat-lost%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%A0%EA%B2%BD%EC%9A%B0/"/>
      <url>/2018/12/20/Ambari-Agent%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EA%B3%A0%EB%8F%84-Ambari-%EC%97%90%EC%84%9C%EB%8A%94-heartbeat-lost%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%A0%EA%B2%BD%EC%9A%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="윈인-및-해결"><a href="#윈인-및-해결" class="headerlink" title="윈인 및 해결"></a>윈인 및 해결</h1><h2 id="시간동기화-문제"><a href="#시간동기화-문제" class="headerlink" title="시간동기화 문제"></a>시간동기화 문제</h2><ul><li><p>해당 호스트들이 몇초 이상 시간차가 나서 인식을 안할수도 있다.</p><ul><li>해결방안 : 각각의 Ambari Node 서버들에서 다음과 같은 명령어를 실행한다.<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop ntpd</span><br><span class="line">ntpdate 0.centos.pool.ntp.org</span><br><span class="line">systemctl start ntpd</span><br><span class="line">ambari-agent restart</span><br></pre></td></tr></table></figure></li></ul></li><li><p>open ssl 설정문제</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> Ambari </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Disable SELinux on CentOS 7</title>
      <link href="/2018/12/20/How-to-Disable-SELinux-on-CentOS-7/"/>
      <url>/2018/12/20/How-to-Disable-SELinux-on-CentOS-7/</url>
      
        <content type="html"><![CDATA[<h1 id="SELinux"><a href="#SELinux" class="headerlink" title="SELinux"></a>SELinux</h1><p>SELinux(Security Enhanced Linux)는 관리자와 사용자가 액세스 제어에 대한 제어력을 높일 수 있는 Linux 커널 보안 모듈이다. SELinux 정책 규칙에 따라 접속할 수 있다.</p><p>SELinux 정책 규칙은 프로세스와 사용자가 파일과 상호 작용하는 방법뿐만 아니라 프로세스와 사용자가 서로 상호작용하는 방법을 지정한다.</p><p>파일을 여는 프로세스처럼 액세스를 특별히 허용하는 SELinux 정책 규칙이 없는 경우, 액세스가 거부된다.</p><h1 id="Disable-SELinux"><a href="#Disable-SELinux" class="headerlink" title="Disable SELinux"></a>Disable SELinux</h1><ol><li><p>SELinux mode 변경</p> <figure class="highlight console hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo setenforce 0</span><br></pre></td></tr></table></figure></li><li><p>/etc/selinux/config 변경</p><p> SELINUX 항목을 disabled로 변경</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span> This file controls the state of SELinux on the system.</span><br><span class="line"><span class="hljs-meta">#</span> SELINUX= can take one of these three values:</span><br><span class="line"><span class="hljs-meta">#</span>       enforcing - SELinux security policy is enforced.</span><br><span class="line"><span class="hljs-meta">#</span>       permissive - SELinux prints warnings instead of enforcing.</span><br><span class="line"><span class="hljs-meta">#</span>       disabled - No SELinux policy is loaded.</span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="hljs-meta">#</span> SELINUXTYPE= can take one of these two values:</span><br><span class="line"><span class="hljs-meta">#</span>       targeted - Targeted processes are protected,</span><br><span class="line"><span class="hljs-meta">#</span>       mls - Multi Level Security protection.</span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure></li><li><p>Server reboot</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> SELinux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7 SELINUX disable 설정후 커널페닉 증상</title>
      <link href="/2018/12/20/Centos7-SELINUX-disable-%EC%84%A4%EC%A0%95%ED%9B%84-%EC%BB%A4%EB%84%90%ED%8E%98%EB%8B%89-%EC%A6%9D%EC%83%81/"/>
      <url>/2018/12/20/Centos7-SELINUX-disable-%EC%84%A4%EC%A0%95%ED%9B%84-%EC%BB%A4%EB%84%90%ED%8E%98%EB%8B%89-%EC%A6%9D%EC%83%81/</url>
      
        <content type="html"><![CDATA[<h1 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h1><p>   Centos SELINUX 설정을 비활성화 후에 재부팅시 부팅화면에서 멈추는 현상</p><h1 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h1><p>   /etc/selinux/config 파일에</p><p>   SELINUXTYPE=disabled 설정되어 있음</p><h1 id="해결방안"><a href="#해결방안" class="headerlink" title="해결방안"></a>해결방안</h1><p>  grub 화면에서 부팅 운영체제를 선택후 e 키를 눌러서 kernel 부팅 옵션으로 들어가서</p><p>  linux16 / vmlinu 가 있는 부분에 selinux = 0 추가할것</p><p>  linux16 / vmlinu - 생략 - selinux = 0</p><p>  완료후에 Ctrl + x 키로 리부트</p>]]></content>
      
      
      
        <tags>
            
            <tag> linix </tag>
            
            <tag> Centos </tag>
            
            <tag> troubleshooting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ambari View 제작</title>
      <link href="/2018/12/19/Ambari-View-%EC%A0%9C%EC%9E%91/"/>
      <url>/2018/12/19/Ambari-View-%EC%A0%9C%EC%9E%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Ambari"><a href="#Ambari" class="headerlink" title="Ambari"></a>Ambari</h1><blockquote><p>Apache Ambari 프로젝트는 Apache Hadoop 클러스터를 프로비저닝, 관리 및 모니터링하는 소프트웨어를 개발하여 Hadoop 관리를 단순화하는 것을 목표로 한다. Ambari는 REST REST API를 통해 직관적이고 사용하기 쉬운 Hadoop 관리 웹 UI를 제공한다.<br><a href="https://ambari.apache.org/" target="_blank" rel="noopener">Apache Ambari project</a></p></blockquote><h1 id="Ambari-View"><a href="#Ambari-View" class="headerlink" title="Ambari View"></a>Ambari View</h1><blockquote><p>Ambari Views는 Ambari Web에서 사용자 정의 시각화, 관리 및 모니터링 기능을 표면화하기 위해 UI 기능을 연결하는 체계적인 방법을 제공한다. “보기”는 제3자가 API, 공급자, UI와 함께 새로운 자원 유형을 지원하게 하는 Ambari를 확장하는 방법이다. 즉, 보기는 Ambari 컨테이너에 배치되는 애플리케이션이다. <a href="https://cwiki.apache.org/confluence/display/AMBARI/Views" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/AMBARI/Views</a></p></blockquote><p>즉 Ambari 에서 별도의 View 화면을 제공해주는 플러그인 이다</p><h1 id="제작-절차"><a href="#제작-절차" class="headerlink" title="제작 절차"></a>제작 절차</h1><ol><li><p>STS 우클릭후 New -&gt; Spring Legacy Project 에서 Spring MVC Project 생성</p><img src="/2018/12/19/Ambari-View-제작/image1.png" title="spaced title"></li><li><p>pom.xml 파일 설정</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.eclipse.jetty<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jetty-jsp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;jetty.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.easymock<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>easymock<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.ambari<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ambari-views<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.sun.jersey<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jersey-server<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span></span><br><span class="line">     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.eclipse.jetty<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jetty-server<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;jetty.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.eclipse.jetty<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jetty-servlet<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;jetty.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.eclipse.jetty<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jetty-webapp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;jetty.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.eclipse.jetty<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jetty-servlets<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;jetty.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">&lt;!-- Spring --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;org.springframework-version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span></span><br><span class="line"><span class="hljs-comment">&lt;!-- Exclude Commons Logging in favor of SLF4j --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-logging<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;org.springframework-version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;org.springframework-version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-beans<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;org.springframework-version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-expression<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;org.springframework-version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>src/main/resources/view.xml 설정</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="line">    <span class="hljs-comment">&lt;!-- ambari name --&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>AmbariViewTest<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Ambari View Test<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">min-ambari-version</span>&gt;</span>2.0.*<span class="hljs-tag">&lt;/<span class="hljs-name">min-ambari-version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">&lt;!-- ambari config data --&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">parameter</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>ambari.server.url<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Enter Ambari Server URL<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">placeholder</span>&gt;</span>http://ambari.server:8080<span class="hljs-tag">&lt;/<span class="hljs-name">placeholder</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">default-value</span>&gt;</span>http://localhost:8080<span class="hljs-tag">&lt;/<span class="hljs-name">default-value</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">parameter</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">parameter</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>ambari.server.containername<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Enter Ambari Container Name<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">parameter</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">parameter</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>ambari.server.username<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Enter Ambari Server username<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">default-value</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">default-value</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">parameter</span>&gt;</span></span><br><span class="line">  <span class="hljs-comment">&lt;!-- ambari view Properties --&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>configurations<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span></span><br><span class="line">      <span class="hljs-tag">&lt;<span class="hljs-name">service-class</span>&gt;</span>com.test.lustre.dao<span class="hljs-tag">&lt;/<span class="hljs-name">service-class</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Spring Web 개발</p></li><li><p>maven 빌드</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean packge</span><br></pre></td></tr></table></figure></li><li><p>/var/lib/ambari-server/resources/viwes 에 빌드된 파일 이동</p></li><li><p>ambari 재시작</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server restart</span><br></pre></td></tr></table></figure></li><li><p>확인</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> hadoop </tag>
            
            <tag> ambari </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vagrant Disk Change</title>
      <link href="/2018/12/15/Vagrant-Disk-Change/"/>
      <url>/2018/12/15/Vagrant-Disk-Change/</url>
      
        <content type="html"><![CDATA[<h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><blockquote><p>Vagrant 은 기본적으로 가상머신을 할당할때 디스크 사이즈가 10G 로 할당되어 있어서 추가로 용량을 잡을때 별도의 디스크를 잡아야 하는 문제가 생긴다. 이를 해결하기 위해서는 직접 virtualbox 을 통해서 디스크 사이즈를 조정해줘야 한다.</p></blockquote><h1 id="디스크-사이즈-변경법"><a href="#디스크-사이즈-변경법" class="headerlink" title="디스크 사이즈 변경법"></a>디스크 사이즈 변경법</h1><ol><li><p>Virtual box VMs 폴더로 이동</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/VirtualBox\ VMs/&lt;virtualbox folder&gt;</span><br></pre></td></tr></table></figure></li><li><p>vmdk 파일 형식을 vdi 형식으로 변경 (디스크 수정이 가능한 포맷)</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage clonehd &quot;ubuntu-xenial-16.04-cloudimg.vmdk&quot; &quot;ubuntu-xenial-16.04-cloudimg.vdi&quot; --format vdi</span><br></pre></td></tr></table></figure></li><li><p>디스크 사이즈 변경</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage modifyhd &quot;ubuntu-xenial-16.04-cloudimg.vdi&quot; --resize 40960</span><br></pre></td></tr></table></figure></li><li><p>가상머신에서 수정한 디스크로 변경</p><img src="/2018/12/15/Vagrant-Disk-Change/image1.png" title="spaced title"></li><li><p>결과</p><img src="/2018/12/15/Vagrant-Disk-Change/image2.png" title="spaced title"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> vagrant </tag>
            
            <tag> virsualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vagrant 사용법</title>
      <link href="/2018/12/15/Vagrant-%EC%82%AC%EC%9A%A9%EB%B2%95/"/>
      <url>/2018/12/15/Vagrant-%EC%82%AC%EC%9A%A9%EB%B2%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Vagrant"><a href="#Vagrant" class="headerlink" title="Vagrant"></a>Vagrant</h1><blockquote><p>베이그런트(Vagrant)는 포터블 가상화 소프트웨어 개발 환경 (예: 개발 생산성 증가를 위해 가상화의 소프트웨어 구성 관리의 단순화를 시도하는 버추얼박스, 하이퍼-V, 도커 컨테이너, VM웨어, AWS)의 생성 및 유지보수를 위한 오픈 소스 소프트웨어 제품의 하나이다. 베이그런트는 루비 언어로 작성되어 있지만 생태계는 몇 가지 언어로 개발을 지원한다. - <a href="https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%9D%B4%EA%B7%B8%EB%9F%B0%ED%8A%B8_(%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4" target="_blank" rel="noopener">위키백과</a>)</p></blockquote><h1 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h1><h2 id="설치환경"><a href="#설치환경" class="headerlink" title="설치환경"></a>설치환경</h2><ol><li>virtualbox 설치<ul><li>추가 virtualbox 확장설치</li></ul></li><li>Hyper-V 설정</li></ol><h2 id="설치절차"><a href="#설치절차" class="headerlink" title="설치절차"></a>설치절차</h2><ul><li><p>우분투</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install virtualbox</span><br></pre></td></tr></table></figure></li><li><p>윈도우즈</p><ol><li>Download <a href="https://releases.hashicorp.com/vagrant/2.2.2/vagrant_2.2.2_x86_64.msi" target="_blank" rel="noopener">https://releases.hashicorp.com/vagrant/2.2.2/vagrant_2.2.2_x86_64.msi</a></li><li>install package</li></ol></li><li><p>맥</p><ol><li><a href="https://releases.hashicorp.com/vagrant/2.2.2/vagrant_2.2.2_x86_64.dmg" target="_blank" rel="noopener">https://releases.hashicorp.com/vagrant/2.2.2/vagrant_2.2.2_x86_64.dmg</a></li><li>install package</li></ol></li></ul><h1 id="Vagrantfile"><a href="#Vagrantfile" class="headerlink" title="Vagrantfile"></a>Vagrantfile</h1><p>  Vagrantfile 내용</p>  <figure class="highlight ruby hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="hljs-comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># vagrant 버쟌 설정</span></span><br><span class="line">Vagrant.configure(<span class="hljs-string">"2"</span>) <span class="hljs-keyword">do</span> <span class="hljs-params">|config|</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-comment"># box 이름 지정</span></span><br><span class="line">  <span class="hljs-comment"># https://app.vagrantup.com/boxes/search 에서 검색가능</span></span><br><span class="line">  config.vm.box = <span class="hljs-string">"CentosBox/Centos7-v7.3-Minimal"</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-comment"># vagrant 가상머신 이름지정</span></span><br><span class="line"> config.vm.define <span class="hljs-symbol">:node01</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|node01|</span></span><br><span class="line">   <span class="hljs-comment"># 호스트이름 지정</span></span><br><span class="line">   node01.vm.hostname = <span class="hljs-string">"node01"</span></span><br><span class="line">   <span class="hljs-comment"># 네트워크 설정 (브릿지 네트워크)</span></span><br><span class="line">   node01.vm.network <span class="hljs-symbol">:<span class="hljs-string">"public_network"</span></span>, <span class="hljs-symbol">ip:</span> <span class="hljs-string">"192.168.1.195"</span>, <span class="hljs-symbol">bridge:</span> <span class="hljs-string">"enp6s0"</span></span><br><span class="line">   <span class="hljs-comment"># virtualbox 설정</span></span><br><span class="line">   node01.vm.provider <span class="hljs-string">"virtualbox"</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|vb|</span></span><br><span class="line">     <span class="hljs-comment"># 메모리 설정</span></span><br><span class="line">     vb.customize [<span class="hljs-string">"modifyvm"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--memory"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">2</span>]</span><br><span class="line">     vb.customize [<span class="hljs-string">"modifyvm"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--name"</span>, <span class="hljs-string">"node01"</span>]</span><br><span class="line"></span><br><span class="line">     <span class="hljs-comment"># 디스크 설정</span></span><br><span class="line">     <span class="hljs-comment"># 만약에 파일이 존재하지 않을경우 디스크 파일 생성</span></span><br><span class="line">     <span class="hljs-keyword">if</span> !File.exist?(<span class="hljs-string">"mst01.vdi"</span>)</span><br><span class="line">       vb.customize [<span class="hljs-string">"createhd"</span>, <span class="hljs-string">"--filename"</span>, <span class="hljs-string">"mst01.vdi"</span>, <span class="hljs-string">"--size"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">10</span>, <span class="hljs-string">"--variant"</span>, <span class="hljs-string">"Fixed"</span>]</span><br><span class="line">       vb.customize [<span class="hljs-string">"modifyhd"</span>, <span class="hljs-string">"mst01.vdi"</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"shareable"</span>]</span><br><span class="line">     <span class="hljs-keyword">end</span></span><br><span class="line">     <span class="hljs-comment"># 해당 파일 병으로 디스크 추가</span></span><br><span class="line">     vb.customize [<span class="hljs-string">"storageattach"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--storagectl"</span>, <span class="hljs-string">"SATA"</span>, <span class="hljs-string">"--port"</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"--device"</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"hdd"</span>, <span class="hljs-string">"--medium"</span>, <span class="hljs-string">"mst01.vdi"</span>]</span><br><span class="line">     <span class="hljs-keyword">if</span> !File.exist?(<span class="hljs-string">"mst02.vdi"</span>)</span><br><span class="line">       vb.customize [<span class="hljs-string">"createhd"</span>, <span class="hljs-string">"--filename"</span>, <span class="hljs-string">"mst02.vdi"</span>, <span class="hljs-string">"--size"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">4</span>, <span class="hljs-string">"--variant"</span>, <span class="hljs-string">"Fixed"</span>]</span><br><span class="line">       vb.customize [<span class="hljs-string">"modifyhd"</span>, <span class="hljs-string">"mst02.vdi"</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"shareable"</span>]</span><br><span class="line">     <span class="hljs-keyword">end</span></span><br><span class="line">     vb.customize [<span class="hljs-string">"storageattach"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--storagectl"</span>, <span class="hljs-string">"SATA"</span>, <span class="hljs-string">"--port"</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"--device"</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"hdd"</span>, <span class="hljs-string">"--medium"</span>, <span class="hljs-string">"mst02.vdi"</span>]</span><br><span class="line">     <span class="hljs-keyword">if</span> !File.exist?(<span class="hljs-string">"mst03.vdi"</span>)</span><br><span class="line">       vb.customize [<span class="hljs-string">"createhd"</span>, <span class="hljs-string">"--filename"</span>, <span class="hljs-string">"mst03.vdi"</span>, <span class="hljs-string">"--size"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">4</span>, <span class="hljs-string">"--variant"</span>, <span class="hljs-string">"Fixed"</span>]</span><br><span class="line">       vb.customize [<span class="hljs-string">"modifyhd"</span>, <span class="hljs-string">"mst03.vdi"</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"shareable"</span>]</span><br><span class="line">     <span class="hljs-keyword">end</span></span><br><span class="line">     vb.customize [<span class="hljs-string">"storageattach"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--storagectl"</span>, <span class="hljs-string">"SATA"</span>, <span class="hljs-string">"--port"</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"--device"</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"hdd"</span>, <span class="hljs-string">"--medium"</span>, <span class="hljs-string">"mst03.vdi"</span>]</span><br><span class="line">   <span class="hljs-keyword">end</span></span><br><span class="line"> <span class="hljs-keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="hljs-symbol">:node02</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|node02|</span></span><br><span class="line">    node02.vm.hostname = <span class="hljs-string">"node02"</span></span><br><span class="line">    node02.vm.network <span class="hljs-symbol">:<span class="hljs-string">"public_network"</span></span>, <span class="hljs-symbol">ip:</span> <span class="hljs-string">"192.168.1.196"</span>, <span class="hljs-symbol">bridge:</span> <span class="hljs-string">"enp6s0"</span></span><br><span class="line">    node02.vm.provider <span class="hljs-string">"virtualbox"</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|vb|</span></span><br><span class="line">      vb.customize [<span class="hljs-string">"modifyvm"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--memory"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">2</span>]</span><br><span class="line">      vb.customize [<span class="hljs-string">"modifyvm"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--name"</span>, <span class="hljs-string">"node02"</span>]</span><br><span class="line">      <span class="hljs-keyword">if</span> !File.exist?(<span class="hljs-string">"ost1.vdi"</span>)</span><br><span class="line">        vb.customize [<span class="hljs-string">"createhd"</span>, <span class="hljs-string">"--filename"</span>, <span class="hljs-string">"ost1.vdi"</span>, <span class="hljs-string">"--size"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">10</span>, <span class="hljs-string">"--variant"</span>, <span class="hljs-string">"Fixed"</span>]</span><br><span class="line">        vb.customize [<span class="hljs-string">"modifyhd"</span>, <span class="hljs-string">"ost1.vdi"</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"shareable"</span>]</span><br><span class="line">      <span class="hljs-keyword">end</span></span><br><span class="line">      vb.customize [<span class="hljs-string">"storageattach"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--storagectl"</span>, <span class="hljs-string">"SATA"</span>, <span class="hljs-string">"--port"</span>, <span class="hljs-number">1</span>, <span class="hljs-string">"--device"</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"hdd"</span>, <span class="hljs-string">"--medium"</span>, <span class="hljs-string">"ost1.vdi"</span>]</span><br><span class="line">      <span class="hljs-keyword">if</span> !File.exist?(<span class="hljs-string">"ost2.vdi"</span>)</span><br><span class="line">        vb.customize [<span class="hljs-string">"createhd"</span>, <span class="hljs-string">"--filename"</span>, <span class="hljs-string">"ost2.vdi"</span>, <span class="hljs-string">"--size"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">4</span>, <span class="hljs-string">"--variant"</span>, <span class="hljs-string">"Fixed"</span>]</span><br><span class="line">        vb.customize [<span class="hljs-string">"modifyhd"</span>, <span class="hljs-string">"ost2.vdi"</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"shareable"</span>]</span><br><span class="line">      <span class="hljs-keyword">end</span></span><br><span class="line">      vb.customize [<span class="hljs-string">"storageattach"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--storagectl"</span>, <span class="hljs-string">"SATA"</span>, <span class="hljs-string">"--port"</span>, <span class="hljs-number">2</span>, <span class="hljs-string">"--device"</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"hdd"</span>, <span class="hljs-string">"--medium"</span>, <span class="hljs-string">"ost2.vdi"</span>]</span><br><span class="line">      <span class="hljs-keyword">if</span> !File.exist?(<span class="hljs-string">"ost3.vdi"</span>)</span><br><span class="line">        vb.customize [<span class="hljs-string">"createhd"</span>, <span class="hljs-string">"--filename"</span>, <span class="hljs-string">"ost3.vdi"</span>, <span class="hljs-string">"--size"</span>, <span class="hljs-number">1024</span>*<span class="hljs-number">4</span>, <span class="hljs-string">"--variant"</span>, <span class="hljs-string">"Fixed"</span>]</span><br><span class="line">        vb.customize [<span class="hljs-string">"modifyhd"</span>, <span class="hljs-string">"ost3.vdi"</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"shareable"</span>]</span><br><span class="line">      <span class="hljs-keyword">end</span></span><br><span class="line">      vb.customize [<span class="hljs-string">"storageattach"</span>, <span class="hljs-symbol">:id</span>, <span class="hljs-string">"--storagectl"</span>, <span class="hljs-string">"SATA"</span>, <span class="hljs-string">"--port"</span>, <span class="hljs-number">3</span>, <span class="hljs-string">"--device"</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"--type"</span>, <span class="hljs-string">"hdd"</span>, <span class="hljs-string">"--medium"</span>, <span class="hljs-string">"ost3.vdi"</span>]</span><br><span class="line">   <span class="hljs-keyword">end</span></span><br><span class="line">  <span class="hljs-keyword">end</span></span><br><span class="line"><span class="hljs-keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="기본명령어"><a href="#기본명령어" class="headerlink" title="기본명령어"></a>기본명령어</h1><h2 id="vagrant-snapshot-list"><a href="#vagrant-snapshot-list" class="headerlink" title="vagrant snapshot list"></a>vagrant snapshot list</h2><p>  현재 스냅샷 목록을 불려온다</p><h2 id="vagrant-snapshot-save-name"><a href="#vagrant-snapshot-save-name" class="headerlink" title="vagrant snapshot save [name]"></a>vagrant snapshot save [name]</h2><p>  해당 스냅샷 이름으로 저장한다</p><h2 id="vagrant-snapshot-resotere-name"><a href="#vagrant-snapshot-resotere-name" class="headerlink" title="vagrant snapshot resotere [name]"></a>vagrant snapshot resotere [name]</h2><p>   해당 스냅샷 이름으로 복구한다</p><h2 id="vagrant-init-name-url"><a href="#vagrant-init-name-url" class="headerlink" title="vagrant init [name [url]]"></a>vagrant init [name [url]]</h2><p>   현재 디렉터리룰 Vagrant 환경으로 초기화한다.</p>   <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vagrant init ubuntu/trusty64</span><br><span class="line">vagrant up</span><br></pre></td></tr></table></figure><h2 id="vagrant-up-name-id"><a href="#vagrant-up-name-id" class="headerlink" title="vagrant up [name|id]"></a>vagrant up [name|id]</h2><p>  이 명령은 Vagrant 파일에 따라 가상머신을 생성 및 구성한다</p><h2 id="vagrant-reload-name-id"><a href="#vagrant-reload-name-id" class="headerlink" title="vagrant reload [name|id]"></a>vagrant reload [name|id]</h2><p>  해당 가상머신을 종료하고 다시 실행한다</p><h2 id="vagrant-halt-name-id"><a href="#vagrant-halt-name-id" class="headerlink" title="vagrant halt [name|id]"></a>vagrant halt [name|id]</h2><p>  해당 가상머신을 종료한다</p><h2 id="vagrant-suspend-name-id"><a href="#vagrant-suspend-name-id" class="headerlink" title="vagrant suspend [name|id]"></a>vagrant suspend [name|id]</h2><p>  해당 가상머신을 일시중지 한다</p><h2 id="vagrant-status-name-id"><a href="#vagrant-status-name-id" class="headerlink" title="vagrant status [name|id]"></a>vagrant status [name|id]</h2><p>  현재 가상머신들의 상태를 표시한다</p><h2 id="vagrant-ssh-name-id-–-extra-ssh-args"><a href="#vagrant-ssh-name-id-–-extra-ssh-args" class="headerlink" title="vagrant ssh [name|id] [– extra_ssh_args]"></a>vagrant ssh [name|id] [– extra_ssh_args]</h2><p>  해당 가상머신으로 ssh 접속을 한다.</p><h2 id="vagrant-destroy-name-id"><a href="#vagrant-destroy-name-id" class="headerlink" title="vagrant destroy [name|id]"></a>vagrant destroy [name|id]</h2><p>  해당 가상머신을 삭제한다.</p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react.js + spring boot</title>
      <link href="/2018/12/13/react-js-spring-boot/"/>
      <url>/2018/12/13/react-js-spring-boot/</url>
      
        <content type="html"><![CDATA[<ol><li>Spring 프로젝트 생성</li><li>프로젝트 내부에 별도의 폴더생성</li><li>npm install -g create-react-app</li><li>create-react-app  <app name> –use-npm</app></li><li>npm run eject (webpack 설정 필요시)</li><li><p>package.json 내부에 다음항목추가</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"proxy": "http://localhost:8080",</span><br></pre></td></tr></table></figure></li><li><p>config / paths.js 내부에 추가</p></li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">templatesPath: resolveApp(<span class="hljs-string">'../src/main/resources/templates'</span>),</span><br><span class="line">appBuild: resolveApp(<span class="hljs-string">'../src/main/resources/static'</span>),</span><br></pre></td></tr></table></figure><ol start="8"><li>script / build.js 내부에 “measureFileSizesBeforeBuild” 함수 then 구문안 마직막 부분에 추가</li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.rename(paths.appBuild + <span class="hljs-string">'/index.html'</span>, paths.templatesPath + <span class="hljs-string">'/index.html'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'index.html move'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="9"><li>평소에는 webpack dev server 이용하다가 배포시 npm build 후에 배포</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> react.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 이미지 저장 경로 변경하는 방법</title>
      <link href="/2018/12/13/Docker-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A0%80%EC%9E%A5-%EA%B2%BD%EB%A1%9C-%EB%B3%80%EA%B2%BD%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/"/>
      <url>/2018/12/13/Docker-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A0%80%EC%9E%A5-%EA%B2%BD%EB%A1%9C-%EB%B3%80%EA%B2%BD%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</url>
      
        <content type="html"><![CDATA[<ol><li>/etc/default/docker 파일내용을 다음과 같이 수정<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=&quot;--dns 8.8.8.8 -g &lt;YOUR_DIR&gt;&quot;</span><br></pre></td></tr></table></figure></li></ol><p>예시)</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span> Docker Upstart and SysVinit configuration file</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span></span><br><span class="line"><span class="hljs-meta">#</span> THIS FILE DOES NOT APPLY TO SYSTEMD</span><br><span class="line"><span class="hljs-meta">#</span></span><br><span class="line"><span class="hljs-meta">#</span>   Please see the documentation for "systemd drop-ins":</span><br><span class="line"><span class="hljs-meta">#</span>   https://docs.docker.com/engine/admin/systemd/</span><br><span class="line"><span class="hljs-meta">#</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span> Customize location of Docker binary (especially for development testing).</span><br><span class="line"><span class="hljs-meta">#</span>DOCKERD="/usr/local/bin/dockerd"</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span> Use DOCKER_OPTS to modify the daemon startup options.</span><br><span class="line">DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4 -g /mnt"</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span> If you need Docker to use an HTTP proxy, it can also be specified here.</span><br><span class="line"><span class="hljs-meta">#</span>export http_proxy="http://127.0.0.1:3128/"</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span> This is also a handy place to tweak where Docker's temporary files go.</span><br><span class="line"><span class="hljs-meta">#</span>export DOCKER_TMPDIR="/mnt/bigdrive/docker-tmp"</span><br></pre></td></tr></table></figure><ol start="2"><li>/lib/systemd/system/docker.service 파일내용을 다음과 같이 수정<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EnvironmentFile=/etc/default/docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -H unix:// $DOCKER_OPTS</span><br></pre></td></tr></table></figure></li></ol><p>예시)<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="hljs-meta">#</span> the default is not to use systemd for cgroups because the delegate issues still</span><br><span class="line"><span class="hljs-meta">#</span> exists and systemd currently does not support the cgroup feature set required</span><br><span class="line"><span class="hljs-meta">#</span> for containers run by docker</span><br><span class="line"><span class="hljs-meta">#</span>ExecStart=/usr/bin/dockerd -H unix://</span><br><span class="line">EnvironmentFile=/etc/default/docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -H unix:// $DOCKER_OPTS</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">TimeoutSec=0</span><br><span class="line">RestartSec=2</span><br></pre></td></tr></table></figure></p><ol start="3"><li>docker 서비스 리로딩 및 재시작<figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service docker stop</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">service docker start</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elementary OS 에서 이클립스 멈춤현상</title>
      <link href="/2018/12/13/elementary-OS%EC%97%90%EC%84%9C-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%EB%A9%88%EC%B6%A4%ED%98%84%EC%83%81/"/>
      <url>/2018/12/13/elementary-OS%EC%97%90%EC%84%9C-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%EB%A9%88%EC%B6%A4%ED%98%84%EC%83%81/</url>
      
        <content type="html"><![CDATA[<h1 id="증상"><a href="#증상" class="headerlink" title="증상"></a>증상</h1><p>이클립스를 elementary OS 에서 실행하고자 하면 이클립스 실행중으로 나오고 작동이 안된다.</p><h1 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h1><p>elementary OS 에서 쓰이는 GTK3 와 이클립스에 사용중인 GTK2이 충돌나서 그런것 같다</p><h1 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h1><p>eclipse.ini 파일에 다음을 추가한다</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--launcher.GTK_version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> elementaryOS </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>locale.Error: unsupported locale setting</title>
      <link href="/2018/12/13/locale-Error-unsupported-locale-setting/"/>
      <url>/2018/12/13/locale-Error-unsupported-locale-setting/</url>
      
        <content type="html"><![CDATA[<h1 id="에러내용"><a href="#에러내용" class="headerlink" title="에러내용"></a>에러내용</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "/bin/pip", line 9, in &lt;module&gt;</span><br><span class="line">    load_entry_point('pip==8.1.1', 'console_scripts', 'pip')()</span><br><span class="line">  File "/usr/lib/python2.7/site-packages/pip-8.1.1-py2.7.egg/pip/__init__.py", line 215, in main</span><br><span class="line">    locale.setlocale(locale.LC_ALL, '')</span><br><span class="line">  File "/usr/lib64/python2.7/locale.py", line 547, in setlocale</span><br><span class="line">    return _setlocale(category, locale)</span><br><span class="line">locale.Error: unsupported locale setting</span><br></pre></td></tr></table></figure><h1 id="해결책"><a href="#해결책" class="headerlink" title="해결책"></a>해결책</h1><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export LC_ALL="en_US.UTF-8"</span><br><span class="line">export LC_CTYPE="en_US.UTF-8"</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>org.apache.ibatis.reflection.ReflectionException:  오류</title>
      <link href="/2018/12/13/org-apache-ibatis-reflection-ReflectionException-%EC%98%A4%EB%A5%98/"/>
      <url>/2018/12/13/org-apache-ibatis-reflection-ReflectionException-%EC%98%A4%EB%A5%98/</url>
      
        <content type="html"><![CDATA[<h1 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h1><p>mybatis를 사용해서 쿼리를 실행할 때 주의할 점이 있다.<br>parameterType=”string” 이면서 1개 입력값만 받을 때 if test 문법으로 null 처리를 할 때 오류가 날 수 있다.<br>오류는 아래와 같다.</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.reflection.ReflectionException:</span><br><span class="line">There is no getter <span class="hljs-keyword">for</span> property named <span class="hljs-string">'name'</span> in <span class="hljs-string">'class java.lang.String'</span></span><br></pre></td></tr></table></figure><h1 id="해결방안"><a href="#해결방안" class="headerlink" title="해결방안"></a>해결방안</h1><p>if test 부분에 parameter 이름을 value로 하면 된다.</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">"value != null and value !=''"</span>&gt;</span></span><br><span class="line">   AND a.name = #&#123;value&#125;</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br></pre></td></tr></table></figure><p>parameterType=”hashmap” 을 사용하면 컬럼명 그대로 사용 가능하다.</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">"name != null and name !=''"</span>&gt;</span></span><br><span class="line">  AND a.name = #&#123;name &#125;</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
